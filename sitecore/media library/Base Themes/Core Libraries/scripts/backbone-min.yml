---
ID: "397d12b4-865a-4e56-86be-2423bc750d7a"
Parent: "e3fbf2bd-14b5-439f-b488-478701f1bae1"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: "/sitecore/media library/Base Themes/Core Libraries/scripts/backbone-min"
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/397D12B4865A4E5686BE2423BC750D7A.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  Value: KGZ1bmN0aW9uICh0KSB7IHZhciBlID0gdHlwZW9mIHNlbGYgPT0gIm9iamVjdCIgJiYgc2VsZi5zZWxmID09PSBzZWxmICYmIHNlbGYgfHwgdHlwZW9mIGdsb2JhbCA9PSAib2JqZWN0IiAmJiBnbG9iYWwuZ2xvYmFsID09PSBnbG9iYWwgJiYgZ2xvYmFsOyBpZiAodHlwZW9mIGRlZmluZSA9PT0gImZ1bmN0aW9uIiAmJiBkZWZpbmUuYW1kKSB7IGRlZmluZShbInVuZGVyc2NvcmUiLCAianF1ZXJ5IiwgImV4cG9ydHMiXSwgZnVuY3Rpb24gKGksIG4sIHIpIHsgZS5CYWNrYm9uZSA9IHQoZSwgciwgaSwgbikgfSkgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gInVuZGVmaW5lZCIpIHsgdmFyIGkgPSByZXF1aXJlKCJ1bmRlcnNjb3JlIiksIG47IHRyeSB7IG4gPSByZXF1aXJlKCJqcXVlcnkiKSB9IGNhdGNoIChyKSB7IH0gdChlLCBleHBvcnRzLCBpLCBuKSB9IGVsc2UgeyBlLkJhY2tib25lID0gdChlLCB7fSwgZS5fLCBlLmpRdWVyeSB8fCBlLlplcHRvIHx8IGUuZW5kZXIgfHwgZS4kKSB9IH0pKGZ1bmN0aW9uICh0LCBlLCBpLCBuKSB7IHZhciByID0gdC5CYWNrYm9uZTsgdmFyIHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7IGUuVkVSU0lPTiA9ICIxLjQuMCI7IGUuJCA9IG47IGUubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHsgdC5CYWNrYm9uZSA9IHI7IHJldHVybiB0aGlzIH07IGUuZW11bGF0ZUhUVFAgPSBmYWxzZTsgZS5lbXVsYXRlSlNPTiA9IGZhbHNlOyB2YXIgYSA9IGUuRXZlbnRzID0ge307IHZhciBvID0gL1xzKy87IHZhciBoOyB2YXIgdSA9IGZ1bmN0aW9uICh0LCBlLCBuLCByLCBzKSB7IHZhciBhID0gMCwgaDsgaWYgKG4gJiYgdHlwZW9mIG4gPT09ICJvYmplY3QiKSB7IGlmIChyICE9PSB2b2lkIDAgJiYgImNvbnRleHQiIGluIHMgJiYgcy5jb250ZXh0ID09PSB2b2lkIDApIHMuY29udGV4dCA9IHI7IGZvciAoaCA9IGkua2V5cyhuKTsgYSA8IGgubGVuZ3RoOyBhKyspIHsgZSA9IHUodCwgZSwgaFthXSwgbltoW2FdXSwgcykgfSB9IGVsc2UgaWYgKG4gJiYgby50ZXN0KG4pKSB7IGZvciAoaCA9IG4uc3BsaXQobyk7IGEgPCBoLmxlbmd0aDsgYSsrKSB7IGUgPSB0KGUsIGhbYV0sIHIsIHMpIH0gfSBlbHNlIHsgZSA9IHQoZSwgbiwgciwgcykgfSByZXR1cm4gZSB9OyBhLm9uID0gZnVuY3Rpb24gKHQsIGUsIGkpIHsgdGhpcy5fZXZlbnRzID0gdShsLCB0aGlzLl9ldmVudHMgfHwge30sIHQsIGUsIHsgY29udGV4dDogaSwgY3R4OiB0aGlzLCBsaXN0ZW5pbmc6IGggfSk7IGlmIChoKSB7IHZhciBuID0gdGhpcy5fbGlzdGVuZXJzIHx8ICh0aGlzLl9saXN0ZW5lcnMgPSB7fSk7IG5baC5pZF0gPSBoOyBoLmludGVyb3AgPSBmYWxzZSB9IHJldHVybiB0aGlzIH07IGEubGlzdGVuVG8gPSBmdW5jdGlvbiAodCwgZSwgbikgeyBpZiAoIXQpIHJldHVybiB0aGlzOyB2YXIgciA9IHQuX2xpc3RlbklkIHx8ICh0Ll9saXN0ZW5JZCA9IGkudW5pcXVlSWQoImwiKSk7IHZhciBzID0gdGhpcy5fbGlzdGVuaW5nVG8gfHwgKHRoaXMuX2xpc3RlbmluZ1RvID0ge30pOyB2YXIgYSA9IGggPSBzW3JdOyBpZiAoIWEpIHsgdGhpcy5fbGlzdGVuSWQgfHwgKHRoaXMuX2xpc3RlbklkID0gaS51bmlxdWVJZCgibCIpKTsgYSA9IGggPSBzW3JdID0gbmV3IGcodGhpcywgdCkgfSB2YXIgbyA9IGModCwgZSwgbiwgdGhpcyk7IGggPSB2b2lkIDA7IGlmIChvKSB0aHJvdyBvOyBpZiAoYS5pbnRlcm9wKSBhLm9uKGUsIG4pOyByZXR1cm4gdGhpcyB9OyB2YXIgbCA9IGZ1bmN0aW9uICh0LCBlLCBpLCBuKSB7IGlmIChpKSB7IHZhciByID0gdFtlXSB8fCAodFtlXSA9IFtdKTsgdmFyIHMgPSBuLmNvbnRleHQsIGEgPSBuLmN0eCwgbyA9IG4ubGlzdGVuaW5nOyBpZiAobykgby5jb3VudCsrOyByLnB1c2goeyBjYWxsYmFjazogaSwgY29udGV4dDogcywgY3R4OiBzIHx8IGEsIGxpc3RlbmluZzogbyB9KSB9IHJldHVybiB0IH07IHZhciBjID0gZnVuY3Rpb24gKHQsIGUsIGksIG4pIHsgdHJ5IHsgdC5vbihlLCBpLCBuKSB9IGNhdGNoIChyKSB7IHJldHVybiByIH0gfTsgYS5vZmYgPSBmdW5jdGlvbiAodCwgZSwgaSkgeyBpZiAoIXRoaXMuX2V2ZW50cykgcmV0dXJuIHRoaXM7IHRoaXMuX2V2ZW50cyA9IHUoZiwgdGhpcy5fZXZlbnRzLCB0LCBlLCB7IGNvbnRleHQ6IGksIGxpc3RlbmVyczogdGhpcy5fbGlzdGVuZXJzIH0pOyByZXR1cm4gdGhpcyB9OyBhLnN0b3BMaXN0ZW5pbmcgPSBmdW5jdGlvbiAodCwgZSwgbikgeyB2YXIgciA9IHRoaXMuX2xpc3RlbmluZ1RvOyBpZiAoIXIpIHJldHVybiB0aGlzOyB2YXIgcyA9IHQgPyBbdC5fbGlzdGVuSWRdIDogaS5rZXlzKHIpOyBmb3IgKHZhciBhID0gMDsgYSA8IHMubGVuZ3RoOyBhKyspIHsgdmFyIG8gPSByW3NbYV1dOyBpZiAoIW8pIGJyZWFrOyBvLm9iai5vZmYoZSwgbiwgdGhpcyk7IGlmIChvLmludGVyb3ApIG8ub2ZmKGUsIG4pIH0gaWYgKGkuaXNFbXB0eShyKSkgdGhpcy5fbGlzdGVuaW5nVG8gPSB2b2lkIDA7IHJldHVybiB0aGlzIH07IHZhciBmID0gZnVuY3Rpb24gKHQsIGUsIG4sIHIpIHsgaWYgKCF0KSByZXR1cm47IHZhciBzID0gci5jb250ZXh0LCBhID0gci5saXN0ZW5lcnM7IHZhciBvID0gMCwgaDsgaWYgKCFlICYmICFzICYmICFuKSB7IGZvciAoaCA9IGkua2V5cyhhKTsgbyA8IGgubGVuZ3RoOyBvKyspIHsgYVtoW29dXS5jbGVhbnVwKCkgfSByZXR1cm4gfSBoID0gZSA/IFtlXSA6IGkua2V5cyh0KTsgZm9yICg7IG8gPCBoLmxlbmd0aDsgbysrKSB7IGUgPSBoW29dOyB2YXIgdSA9IHRbZV07IGlmICghdSkgYnJlYWs7IHZhciBsID0gW107IGZvciAodmFyIGMgPSAwOyBjIDwgdS5sZW5ndGg7IGMrKykgeyB2YXIgZiA9IHVbY107IGlmIChuICYmIG4gIT09IGYuY2FsbGJhY2sgJiYgbiAhPT0gZi5jYWxsYmFjay5fY2FsbGJhY2sgfHwgcyAmJiBzICE9PSBmLmNvbnRleHQpIHsgbC5wdXNoKGYpIH0gZWxzZSB7IHZhciBkID0gZi5saXN0ZW5pbmc7IGlmIChkKSBkLm9mZihlLCBuKSB9IH0gaWYgKGwubGVuZ3RoKSB7IHRbZV0gPSBsIH0gZWxzZSB7IGRlbGV0ZSB0W2VdIH0gfSByZXR1cm4gdCB9OyBhLm9uY2UgPSBmdW5jdGlvbiAodCwgZSwgaSkgeyB2YXIgbiA9IHUoZCwge30sIHQsIGUsIHRoaXMub2ZmLmJpbmQodGhpcykpOyBpZiAodHlwZW9mIHQgPT09ICJzdHJpbmciICYmIGkgPT0gbnVsbCkgZSA9IHZvaWQgMDsgcmV0dXJuIHRoaXMub24obiwgZSwgaSkgfTsgYS5saXN0ZW5Ub09uY2UgPSBmdW5jdGlvbiAodCwgZSwgaSkgeyB2YXIgbiA9IHUoZCwge30sIGUsIGksIHRoaXMuc3RvcExpc3RlbmluZy5iaW5kKHRoaXMsIHQpKTsgcmV0dXJuIHRoaXMubGlzdGVuVG8odCwgbikgfTsgdmFyIGQgPSBmdW5jdGlvbiAodCwgZSwgbiwgcikgeyBpZiAobikgeyB2YXIgcyA9IHRbZV0gPSBpLm9uY2UoZnVuY3Rpb24gKCkgeyByKGUsIHMpOyBuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfSk7IHMuX2NhbGxiYWNrID0gbiB9IHJldHVybiB0IH07IGEudHJpZ2dlciA9IGZ1bmN0aW9uICh0KSB7IGlmICghdGhpcy5fZXZlbnRzKSByZXR1cm4gdGhpczsgdmFyIGUgPSBNYXRoLm1heCgwLCBhcmd1bWVudHMubGVuZ3RoIC0gMSk7IHZhciBpID0gQXJyYXkoZSk7IGZvciAodmFyIG4gPSAwOyBuIDwgZTsgbisrKWlbbl0gPSBhcmd1bWVudHNbbiArIDFdOyB1KHYsIHRoaXMuX2V2ZW50cywgdCwgdm9pZCAwLCBpKTsgcmV0dXJuIHRoaXMgfTsgdmFyIHYgPSBmdW5jdGlvbiAodCwgZSwgaSwgbikgeyBpZiAodCkgeyB2YXIgciA9IHRbZV07IHZhciBzID0gdC5hbGw7IGlmIChyICYmIHMpIHMgPSBzLnNsaWNlKCk7IGlmIChyKSBwKHIsIG4pOyBpZiAocykgcChzLCBbZV0uY29uY2F0KG4pKSB9IHJldHVybiB0IH07IHZhciBwID0gZnVuY3Rpb24gKHQsIGUpIHsgdmFyIGksIG4gPSAtMSwgciA9IHQubGVuZ3RoLCBzID0gZVswXSwgYSA9IGVbMV0sIG8gPSBlWzJdOyBzd2l0Y2ggKGUubGVuZ3RoKSB7IGNhc2UgMDogd2hpbGUgKCsrbiA8IHIpIChpID0gdFtuXSkuY2FsbGJhY2suY2FsbChpLmN0eCk7IHJldHVybjsgY2FzZSAxOiB3aGlsZSAoKytuIDwgcikgKGkgPSB0W25dKS5jYWxsYmFjay5jYWxsKGkuY3R4LCBzKTsgcmV0dXJuOyBjYXNlIDI6IHdoaWxlICgrK24gPCByKSAoaSA9IHRbbl0pLmNhbGxiYWNrLmNhbGwoaS5jdHgsIHMsIGEpOyByZXR1cm47IGNhc2UgMzogd2hpbGUgKCsrbiA8IHIpIChpID0gdFtuXSkuY2FsbGJhY2suY2FsbChpLmN0eCwgcywgYSwgbyk7IHJldHVybjsgZGVmYXVsdDogd2hpbGUgKCsrbiA8IHIpIChpID0gdFtuXSkuY2FsbGJhY2suYXBwbHkoaS5jdHgsIGUpOyByZXR1cm4gfSB9OyB2YXIgZyA9IGZ1bmN0aW9uICh0LCBlKSB7IHRoaXMuaWQgPSB0Ll9saXN0ZW5JZDsgdGhpcy5saXN0ZW5lciA9IHQ7IHRoaXMub2JqID0gZTsgdGhpcy5pbnRlcm9wID0gdHJ1ZTsgdGhpcy5jb3VudCA9IDA7IHRoaXMuX2V2ZW50cyA9IHZvaWQgMCB9OyBnLnByb3RvdHlwZS5vbiA9IGEub247IGcucHJvdG90eXBlLm9mZiA9IGZ1bmN0aW9uICh0LCBlKSB7IHZhciBpOyBpZiAodGhpcy5pbnRlcm9wKSB7IHRoaXMuX2V2ZW50cyA9IHUoZiwgdGhpcy5fZXZlbnRzLCB0LCBlLCB7IGNvbnRleHQ6IHZvaWQgMCwgbGlzdGVuZXJzOiB2b2lkIDAgfSk7IGkgPSAhdGhpcy5fZXZlbnRzIH0gZWxzZSB7IHRoaXMuY291bnQtLTsgaSA9IHRoaXMuY291bnQgPT09IDAgfSBpZiAoaSkgdGhpcy5jbGVhbnVwKCkgfTsgZy5wcm90b3R5cGUuY2xlYW51cCA9IGZ1bmN0aW9uICgpIHsgZGVsZXRlIHRoaXMubGlzdGVuZXIuX2xpc3RlbmluZ1RvW3RoaXMub2JqLl9saXN0ZW5JZF07IGlmICghdGhpcy5pbnRlcm9wKSBkZWxldGUgdGhpcy5vYmouX2xpc3RlbmVyc1t0aGlzLmlkXSB9OyBhLmJpbmQgPSBhLm9uOyBhLnVuYmluZCA9IGEub2ZmOyBpLmV4dGVuZChlLCBhKTsgdmFyIG0gPSBlLk1vZGVsID0gZnVuY3Rpb24gKHQsIGUpIHsgdmFyIG4gPSB0IHx8IHt9OyBlIHx8IChlID0ge30pOyB0aGlzLnByZWluaXRpYWxpemUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgdGhpcy5jaWQgPSBpLnVuaXF1ZUlkKHRoaXMuY2lkUHJlZml4KTsgdGhpcy5hdHRyaWJ1dGVzID0ge307IGlmIChlLmNvbGxlY3Rpb24pIHRoaXMuY29sbGVjdGlvbiA9IGUuY29sbGVjdGlvbjsgaWYgKGUucGFyc2UpIG4gPSB0aGlzLnBhcnNlKG4sIGUpIHx8IHt9OyB2YXIgciA9IGkucmVzdWx0KHRoaXMsICJkZWZhdWx0cyIpOyBuID0gaS5kZWZhdWx0cyhpLmV4dGVuZCh7fSwgciwgbiksIHIpOyB0aGlzLnNldChuLCBlKTsgdGhpcy5jaGFuZ2VkID0ge307IHRoaXMuaW5pdGlhbGl6ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIH07IGkuZXh0ZW5kKG0ucHJvdG90eXBlLCBhLCB7IGNoYW5nZWQ6IG51bGwsIHZhbGlkYXRpb25FcnJvcjogbnVsbCwgaWRBdHRyaWJ1dGU6ICJpZCIsIGNpZFByZWZpeDogImMiLCBwcmVpbml0aWFsaXplOiBmdW5jdGlvbiAoKSB7IH0sIGluaXRpYWxpemU6IGZ1bmN0aW9uICgpIHsgfSwgdG9KU09OOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gaS5jbG9uZSh0aGlzLmF0dHJpYnV0ZXMpIH0sIHN5bmM6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGUuc3luYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpIH0sIGdldDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMuYXR0cmlidXRlc1t0XSB9LCBlc2NhcGU6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBpLmVzY2FwZSh0aGlzLmdldCh0KSkgfSwgaGFzOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5nZXQodCkgIT0gbnVsbCB9LCBtYXRjaGVzOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gISFpLml0ZXJhdGVlKHQsIHRoaXMpKHRoaXMuYXR0cmlidXRlcykgfSwgc2V0OiBmdW5jdGlvbiAodCwgZSwgbikgeyBpZiAodCA9PSBudWxsKSByZXR1cm4gdGhpczsgdmFyIHI7IGlmICh0eXBlb2YgdCA9PT0gIm9iamVjdCIpIHsgciA9IHQ7IG4gPSBlIH0gZWxzZSB7IChyID0ge30pW3RdID0gZSB9IG4gfHwgKG4gPSB7fSk7IGlmICghdGhpcy5fdmFsaWRhdGUociwgbikpIHJldHVybiBmYWxzZTsgdmFyIHMgPSBuLnVuc2V0OyB2YXIgYSA9IG4uc2lsZW50OyB2YXIgbyA9IFtdOyB2YXIgaCA9IHRoaXMuX2NoYW5naW5nOyB0aGlzLl9jaGFuZ2luZyA9IHRydWU7IGlmICghaCkgeyB0aGlzLl9wcmV2aW91c0F0dHJpYnV0ZXMgPSBpLmNsb25lKHRoaXMuYXR0cmlidXRlcyk7IHRoaXMuY2hhbmdlZCA9IHt9IH0gdmFyIHUgPSB0aGlzLmF0dHJpYnV0ZXM7IHZhciBsID0gdGhpcy5jaGFuZ2VkOyB2YXIgYyA9IHRoaXMuX3ByZXZpb3VzQXR0cmlidXRlczsgZm9yICh2YXIgZiBpbiByKSB7IGUgPSByW2ZdOyBpZiAoIWkuaXNFcXVhbCh1W2ZdLCBlKSkgby5wdXNoKGYpOyBpZiAoIWkuaXNFcXVhbChjW2ZdLCBlKSkgeyBsW2ZdID0gZSB9IGVsc2UgeyBkZWxldGUgbFtmXSB9IHMgPyBkZWxldGUgdVtmXSA6IHVbZl0gPSBlIH0gaWYgKHRoaXMuaWRBdHRyaWJ1dGUgaW4gcikgdGhpcy5pZCA9IHRoaXMuZ2V0KHRoaXMuaWRBdHRyaWJ1dGUpOyBpZiAoIWEpIHsgaWYgKG8ubGVuZ3RoKSB0aGlzLl9wZW5kaW5nID0gbjsgZm9yICh2YXIgZCA9IDA7IGQgPCBvLmxlbmd0aDsgZCsrKSB7IHRoaXMudHJpZ2dlcigiY2hhbmdlOiIgKyBvW2RdLCB0aGlzLCB1W29bZF1dLCBuKSB9IH0gaWYgKGgpIHJldHVybiB0aGlzOyBpZiAoIWEpIHsgd2hpbGUgKHRoaXMuX3BlbmRpbmcpIHsgbiA9IHRoaXMuX3BlbmRpbmc7IHRoaXMuX3BlbmRpbmcgPSBmYWxzZTsgdGhpcy50cmlnZ2VyKCJjaGFuZ2UiLCB0aGlzLCBuKSB9IH0gdGhpcy5fcGVuZGluZyA9IGZhbHNlOyB0aGlzLl9jaGFuZ2luZyA9IGZhbHNlOyByZXR1cm4gdGhpcyB9LCB1bnNldDogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHRoaXMuc2V0KHQsIHZvaWQgMCwgaS5leHRlbmQoe30sIGUsIHsgdW5zZXQ6IHRydWUgfSkpIH0sIGNsZWFyOiBmdW5jdGlvbiAodCkgeyB2YXIgZSA9IHt9OyBmb3IgKHZhciBuIGluIHRoaXMuYXR0cmlidXRlcykgZVtuXSA9IHZvaWQgMDsgcmV0dXJuIHRoaXMuc2V0KGUsIGkuZXh0ZW5kKHt9LCB0LCB7IHVuc2V0OiB0cnVlIH0pKSB9LCBoYXNDaGFuZ2VkOiBmdW5jdGlvbiAodCkgeyBpZiAodCA9PSBudWxsKSByZXR1cm4gIWkuaXNFbXB0eSh0aGlzLmNoYW5nZWQpOyByZXR1cm4gaS5oYXModGhpcy5jaGFuZ2VkLCB0KSB9LCBjaGFuZ2VkQXR0cmlidXRlczogZnVuY3Rpb24gKHQpIHsgaWYgKCF0KSByZXR1cm4gdGhpcy5oYXNDaGFuZ2VkKCkgPyBpLmNsb25lKHRoaXMuY2hhbmdlZCkgOiBmYWxzZTsgdmFyIGUgPSB0aGlzLl9jaGFuZ2luZyA/IHRoaXMuX3ByZXZpb3VzQXR0cmlidXRlcyA6IHRoaXMuYXR0cmlidXRlczsgdmFyIG4gPSB7fTsgdmFyIHI7IGZvciAodmFyIHMgaW4gdCkgeyB2YXIgYSA9IHRbc107IGlmIChpLmlzRXF1YWwoZVtzXSwgYSkpIGNvbnRpbnVlOyBuW3NdID0gYTsgciA9IHRydWUgfSByZXR1cm4gciA/IG4gOiBmYWxzZSB9LCBwcmV2aW91czogZnVuY3Rpb24gKHQpIHsgaWYgKHQgPT0gbnVsbCB8fCAhdGhpcy5fcHJldmlvdXNBdHRyaWJ1dGVzKSByZXR1cm4gbnVsbDsgcmV0dXJuIHRoaXMuX3ByZXZpb3VzQXR0cmlidXRlc1t0XSB9LCBwcmV2aW91c0F0dHJpYnV0ZXM6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGkuY2xvbmUodGhpcy5fcHJldmlvdXNBdHRyaWJ1dGVzKSB9LCBmZXRjaDogZnVuY3Rpb24gKHQpIHsgdCA9IGkuZXh0ZW5kKHsgcGFyc2U6IHRydWUgfSwgdCk7IHZhciBlID0gdGhpczsgdmFyIG4gPSB0LnN1Y2Nlc3M7IHQuc3VjY2VzcyA9IGZ1bmN0aW9uIChpKSB7IHZhciByID0gdC5wYXJzZSA/IGUucGFyc2UoaSwgdCkgOiBpOyBpZiAoIWUuc2V0KHIsIHQpKSByZXR1cm4gZmFsc2U7IGlmIChuKSBuLmNhbGwodC5jb250ZXh0LCBlLCBpLCB0KTsgZS50cmlnZ2VyKCJzeW5jIiwgZSwgaSwgdCkgfTsgRyh0aGlzLCB0KTsgcmV0dXJuIHRoaXMuc3luYygicmVhZCIsIHRoaXMsIHQpIH0sIHNhdmU6IGZ1bmN0aW9uICh0LCBlLCBuKSB7IHZhciByOyBpZiAodCA9PSBudWxsIHx8IHR5cGVvZiB0ID09PSAib2JqZWN0IikgeyByID0gdDsgbiA9IGUgfSBlbHNlIHsgKHIgPSB7fSlbdF0gPSBlIH0gbiA9IGkuZXh0ZW5kKHsgdmFsaWRhdGU6IHRydWUsIHBhcnNlOiB0cnVlIH0sIG4pOyB2YXIgcyA9IG4ud2FpdDsgaWYgKHIgJiYgIXMpIHsgaWYgKCF0aGlzLnNldChyLCBuKSkgcmV0dXJuIGZhbHNlIH0gZWxzZSBpZiAoIXRoaXMuX3ZhbGlkYXRlKHIsIG4pKSB7IHJldHVybiBmYWxzZSB9IHZhciBhID0gdGhpczsgdmFyIG8gPSBuLnN1Y2Nlc3M7IHZhciBoID0gdGhpcy5hdHRyaWJ1dGVzOyBuLnN1Y2Nlc3MgPSBmdW5jdGlvbiAodCkgeyBhLmF0dHJpYnV0ZXMgPSBoOyB2YXIgZSA9IG4ucGFyc2UgPyBhLnBhcnNlKHQsIG4pIDogdDsgaWYgKHMpIGUgPSBpLmV4dGVuZCh7fSwgciwgZSk7IGlmIChlICYmICFhLnNldChlLCBuKSkgcmV0dXJuIGZhbHNlOyBpZiAobykgby5jYWxsKG4uY29udGV4dCwgYSwgdCwgbik7IGEudHJpZ2dlcigic3luYyIsIGEsIHQsIG4pIH07IEcodGhpcywgbik7IGlmIChyICYmIHMpIHRoaXMuYXR0cmlidXRlcyA9IGkuZXh0ZW5kKHt9LCBoLCByKTsgdmFyIHUgPSB0aGlzLmlzTmV3KCkgPyAiY3JlYXRlIiA6IG4ucGF0Y2ggPyAicGF0Y2giIDogInVwZGF0ZSI7IGlmICh1ID09PSAicGF0Y2giICYmICFuLmF0dHJzKSBuLmF0dHJzID0gcjsgdmFyIGwgPSB0aGlzLnN5bmModSwgdGhpcywgbik7IHRoaXMuYXR0cmlidXRlcyA9IGg7IHJldHVybiBsIH0sIGRlc3Ryb3k6IGZ1bmN0aW9uICh0KSB7IHQgPSB0ID8gaS5jbG9uZSh0KSA6IHt9OyB2YXIgZSA9IHRoaXM7IHZhciBuID0gdC5zdWNjZXNzOyB2YXIgciA9IHQud2FpdDsgdmFyIHMgPSBmdW5jdGlvbiAoKSB7IGUuc3RvcExpc3RlbmluZygpOyBlLnRyaWdnZXIoImRlc3Ryb3kiLCBlLCBlLmNvbGxlY3Rpb24sIHQpIH07IHQuc3VjY2VzcyA9IGZ1bmN0aW9uIChpKSB7IGlmIChyKSBzKCk7IGlmIChuKSBuLmNhbGwodC5jb250ZXh0LCBlLCBpLCB0KTsgaWYgKCFlLmlzTmV3KCkpIGUudHJpZ2dlcigic3luYyIsIGUsIGksIHQpIH07IHZhciBhID0gZmFsc2U7IGlmICh0aGlzLmlzTmV3KCkpIHsgaS5kZWZlcih0LnN1Y2Nlc3MpIH0gZWxzZSB7IEcodGhpcywgdCk7IGEgPSB0aGlzLnN5bmMoImRlbGV0ZSIsIHRoaXMsIHQpIH0gaWYgKCFyKSBzKCk7IHJldHVybiBhIH0sIHVybDogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IGkucmVzdWx0KHRoaXMsICJ1cmxSb290IikgfHwgaS5yZXN1bHQodGhpcy5jb2xsZWN0aW9uLCAidXJsIikgfHwgVigpOyBpZiAodGhpcy5pc05ldygpKSByZXR1cm4gdDsgdmFyIGUgPSB0aGlzLmdldCh0aGlzLmlkQXR0cmlidXRlKTsgcmV0dXJuIHQucmVwbGFjZSgvW15cL10kLywgIiQmLyIpICsgZW5jb2RlVVJJQ29tcG9uZW50KGUpIH0sIHBhcnNlOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdCB9LCBjbG9uZTogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV3IHRoaXMuY29uc3RydWN0b3IodGhpcy5hdHRyaWJ1dGVzKSB9LCBpc05ldzogZnVuY3Rpb24gKCkgeyByZXR1cm4gIXRoaXMuaGFzKHRoaXMuaWRBdHRyaWJ1dGUpIH0sIGlzVmFsaWQ6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0aGlzLl92YWxpZGF0ZSh7fSwgaS5leHRlbmQoe30sIHQsIHsgdmFsaWRhdGU6IHRydWUgfSkpIH0sIF92YWxpZGF0ZTogZnVuY3Rpb24gKHQsIGUpIHsgaWYgKCFlLnZhbGlkYXRlIHx8ICF0aGlzLnZhbGlkYXRlKSByZXR1cm4gdHJ1ZTsgdCA9IGkuZXh0ZW5kKHt9LCB0aGlzLmF0dHJpYnV0ZXMsIHQpOyB2YXIgbiA9IHRoaXMudmFsaWRhdGlvbkVycm9yID0gdGhpcy52YWxpZGF0ZSh0LCBlKSB8fCBudWxsOyBpZiAoIW4pIHJldHVybiB0cnVlOyB0aGlzLnRyaWdnZXIoImludmFsaWQiLCB0aGlzLCBuLCBpLmV4dGVuZChlLCB7IHZhbGlkYXRpb25FcnJvcjogbiB9KSk7IHJldHVybiBmYWxzZSB9IH0pOyB2YXIgXyA9IGUuQ29sbGVjdGlvbiA9IGZ1bmN0aW9uICh0LCBlKSB7IGUgfHwgKGUgPSB7fSk7IHRoaXMucHJlaW5pdGlhbGl6ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyBpZiAoZS5tb2RlbCkgdGhpcy5tb2RlbCA9IGUubW9kZWw7IGlmIChlLmNvbXBhcmF0b3IgIT09IHZvaWQgMCkgdGhpcy5jb21wYXJhdG9yID0gZS5jb21wYXJhdG9yOyB0aGlzLl9yZXNldCgpOyB0aGlzLmluaXRpYWxpemUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgaWYgKHQpIHRoaXMucmVzZXQodCwgaS5leHRlbmQoeyBzaWxlbnQ6IHRydWUgfSwgZSkpIH07IHZhciB5ID0geyBhZGQ6IHRydWUsIHJlbW92ZTogdHJ1ZSwgbWVyZ2U6IHRydWUgfTsgdmFyIGIgPSB7IGFkZDogdHJ1ZSwgcmVtb3ZlOiBmYWxzZSB9OyB2YXIgeCA9IGZ1bmN0aW9uICh0LCBlLCBpKSB7IGkgPSBNYXRoLm1pbihNYXRoLm1heChpLCAwKSwgdC5sZW5ndGgpOyB2YXIgbiA9IEFycmF5KHQubGVuZ3RoIC0gaSk7IHZhciByID0gZS5sZW5ndGg7IHZhciBzOyBmb3IgKHMgPSAwOyBzIDwgbi5sZW5ndGg7IHMrKyluW3NdID0gdFtzICsgaV07IGZvciAocyA9IDA7IHMgPCByOyBzKyspdFtzICsgaV0gPSBlW3NdOyBmb3IgKHMgPSAwOyBzIDwgbi5sZW5ndGg7IHMrKyl0W3MgKyByICsgaV0gPSBuW3NdIH07IGkuZXh0ZW5kKF8ucHJvdG90eXBlLCBhLCB7IG1vZGVsOiBtLCBwcmVpbml0aWFsaXplOiBmdW5jdGlvbiAoKSB7IH0sIGluaXRpYWxpemU6IGZ1bmN0aW9uICgpIHsgfSwgdG9KU09OOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGUpIHsgcmV0dXJuIGUudG9KU09OKHQpIH0pIH0sIHN5bmM6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGUuc3luYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpIH0sIGFkZDogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHRoaXMuc2V0KHQsIGkuZXh0ZW5kKHsgbWVyZ2U6IGZhbHNlIH0sIGUsIGIpKSB9LCByZW1vdmU6IGZ1bmN0aW9uICh0LCBlKSB7IGUgPSBpLmV4dGVuZCh7fSwgZSk7IHZhciBuID0gIWkuaXNBcnJheSh0KTsgdCA9IG4gPyBbdF0gOiB0LnNsaWNlKCk7IHZhciByID0gdGhpcy5fcmVtb3ZlTW9kZWxzKHQsIGUpOyBpZiAoIWUuc2lsZW50ICYmIHIubGVuZ3RoKSB7IGUuY2hhbmdlcyA9IHsgYWRkZWQ6IFtdLCBtZXJnZWQ6IFtdLCByZW1vdmVkOiByIH07IHRoaXMudHJpZ2dlcigidXBkYXRlIiwgdGhpcywgZSkgfSByZXR1cm4gbiA/IHJbMF0gOiByIH0sIHNldDogZnVuY3Rpb24gKHQsIGUpIHsgaWYgKHQgPT0gbnVsbCkgcmV0dXJuOyBlID0gaS5leHRlbmQoe30sIHksIGUpOyBpZiAoZS5wYXJzZSAmJiAhdGhpcy5faXNNb2RlbCh0KSkgeyB0ID0gdGhpcy5wYXJzZSh0LCBlKSB8fCBbXSB9IHZhciBuID0gIWkuaXNBcnJheSh0KTsgdCA9IG4gPyBbdF0gOiB0LnNsaWNlKCk7IHZhciByID0gZS5hdDsgaWYgKHIgIT0gbnVsbCkgciA9ICtyOyBpZiAociA+IHRoaXMubGVuZ3RoKSByID0gdGhpcy5sZW5ndGg7IGlmIChyIDwgMCkgciArPSB0aGlzLmxlbmd0aCArIDE7IHZhciBzID0gW107IHZhciBhID0gW107IHZhciBvID0gW107IHZhciBoID0gW107IHZhciB1ID0ge307IHZhciBsID0gZS5hZGQ7IHZhciBjID0gZS5tZXJnZTsgdmFyIGYgPSBlLnJlbW92ZTsgdmFyIGQgPSBmYWxzZTsgdmFyIHYgPSB0aGlzLmNvbXBhcmF0b3IgJiYgciA9PSBudWxsICYmIGUuc29ydCAhPT0gZmFsc2U7IHZhciBwID0gaS5pc1N0cmluZyh0aGlzLmNvbXBhcmF0b3IpID8gdGhpcy5jb21wYXJhdG9yIDogbnVsbDsgdmFyIGcsIG07IGZvciAobSA9IDA7IG0gPCB0Lmxlbmd0aDsgbSsrKSB7IGcgPSB0W21dOyB2YXIgXyA9IHRoaXMuZ2V0KGcpOyBpZiAoXykgeyBpZiAoYyAmJiBnICE9PSBfKSB7IHZhciBiID0gdGhpcy5faXNNb2RlbChnKSA/IGcuYXR0cmlidXRlcyA6IGc7IGlmIChlLnBhcnNlKSBiID0gXy5wYXJzZShiLCBlKTsgXy5zZXQoYiwgZSk7IG8ucHVzaChfKTsgaWYgKHYgJiYgIWQpIGQgPSBfLmhhc0NoYW5nZWQocCkgfSBpZiAoIXVbXy5jaWRdKSB7IHVbXy5jaWRdID0gdHJ1ZTsgcy5wdXNoKF8pIH0gdFttXSA9IF8gfSBlbHNlIGlmIChsKSB7IGcgPSB0W21dID0gdGhpcy5fcHJlcGFyZU1vZGVsKGcsIGUpOyBpZiAoZykgeyBhLnB1c2goZyk7IHRoaXMuX2FkZFJlZmVyZW5jZShnLCBlKTsgdVtnLmNpZF0gPSB0cnVlOyBzLnB1c2goZykgfSB9IH0gaWYgKGYpIHsgZm9yIChtID0gMDsgbSA8IHRoaXMubGVuZ3RoOyBtKyspIHsgZyA9IHRoaXMubW9kZWxzW21dOyBpZiAoIXVbZy5jaWRdKSBoLnB1c2goZykgfSBpZiAoaC5sZW5ndGgpIHRoaXMuX3JlbW92ZU1vZGVscyhoLCBlKSB9IHZhciB3ID0gZmFsc2U7IHZhciBFID0gIXYgJiYgbCAmJiBmOyBpZiAocy5sZW5ndGggJiYgRSkgeyB3ID0gdGhpcy5sZW5ndGggIT09IHMubGVuZ3RoIHx8IGkuc29tZSh0aGlzLm1vZGVscywgZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHQgIT09IHNbZV0gfSk7IHRoaXMubW9kZWxzLmxlbmd0aCA9IDA7IHgodGhpcy5tb2RlbHMsIHMsIDApOyB0aGlzLmxlbmd0aCA9IHRoaXMubW9kZWxzLmxlbmd0aCB9IGVsc2UgaWYgKGEubGVuZ3RoKSB7IGlmICh2KSBkID0gdHJ1ZTsgeCh0aGlzLm1vZGVscywgYSwgciA9PSBudWxsID8gdGhpcy5sZW5ndGggOiByKTsgdGhpcy5sZW5ndGggPSB0aGlzLm1vZGVscy5sZW5ndGggfSBpZiAoZCkgdGhpcy5zb3J0KHsgc2lsZW50OiB0cnVlIH0pOyBpZiAoIWUuc2lsZW50KSB7IGZvciAobSA9IDA7IG0gPCBhLmxlbmd0aDsgbSsrKSB7IGlmIChyICE9IG51bGwpIGUuaW5kZXggPSByICsgbTsgZyA9IGFbbV07IGcudHJpZ2dlcigiYWRkIiwgZywgdGhpcywgZSkgfSBpZiAoZCB8fCB3KSB0aGlzLnRyaWdnZXIoInNvcnQiLCB0aGlzLCBlKTsgaWYgKGEubGVuZ3RoIHx8IGgubGVuZ3RoIHx8IG8ubGVuZ3RoKSB7IGUuY2hhbmdlcyA9IHsgYWRkZWQ6IGEsIHJlbW92ZWQ6IGgsIG1lcmdlZDogbyB9OyB0aGlzLnRyaWdnZXIoInVwZGF0ZSIsIHRoaXMsIGUpIH0gfSByZXR1cm4gbiA/IHRbMF0gOiB0IH0sIHJlc2V0OiBmdW5jdGlvbiAodCwgZSkgeyBlID0gZSA/IGkuY2xvbmUoZSkgOiB7fTsgZm9yICh2YXIgbiA9IDA7IG4gPCB0aGlzLm1vZGVscy5sZW5ndGg7IG4rKykgeyB0aGlzLl9yZW1vdmVSZWZlcmVuY2UodGhpcy5tb2RlbHNbbl0sIGUpIH0gZS5wcmV2aW91c01vZGVscyA9IHRoaXMubW9kZWxzOyB0aGlzLl9yZXNldCgpOyB0ID0gdGhpcy5hZGQodCwgaS5leHRlbmQoeyBzaWxlbnQ6IHRydWUgfSwgZSkpOyBpZiAoIWUuc2lsZW50KSB0aGlzLnRyaWdnZXIoInJlc2V0IiwgdGhpcywgZSk7IHJldHVybiB0IH0sIHB1c2g6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0aGlzLmFkZCh0LCBpLmV4dGVuZCh7IGF0OiB0aGlzLmxlbmd0aCB9LCBlKSkgfSwgcG9wOiBmdW5jdGlvbiAodCkgeyB2YXIgZSA9IHRoaXMuYXQodGhpcy5sZW5ndGggLSAxKTsgcmV0dXJuIHRoaXMucmVtb3ZlKGUsIHQpIH0sIHVuc2hpZnQ6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiB0aGlzLmFkZCh0LCBpLmV4dGVuZCh7IGF0OiAwIH0sIGUpKSB9LCBzaGlmdDogZnVuY3Rpb24gKHQpIHsgdmFyIGUgPSB0aGlzLmF0KDApOyByZXR1cm4gdGhpcy5yZW1vdmUoZSwgdCkgfSwgc2xpY2U6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHMuYXBwbHkodGhpcy5tb2RlbHMsIGFyZ3VtZW50cykgfSwgZ2V0OiBmdW5jdGlvbiAodCkgeyBpZiAodCA9PSBudWxsKSByZXR1cm4gdm9pZCAwOyByZXR1cm4gdGhpcy5fYnlJZFt0XSB8fCB0aGlzLl9ieUlkW3RoaXMubW9kZWxJZCh0aGlzLl9pc01vZGVsKHQpID8gdC5hdHRyaWJ1dGVzIDogdCldIHx8IHQuY2lkICYmIHRoaXMuX2J5SWRbdC5jaWRdIH0sIGhhczogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMuZ2V0KHQpICE9IG51bGwgfSwgYXQ6IGZ1bmN0aW9uICh0KSB7IGlmICh0IDwgMCkgdCArPSB0aGlzLmxlbmd0aDsgcmV0dXJuIHRoaXMubW9kZWxzW3RdIH0sIHdoZXJlOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gdGhpc1tlID8gImZpbmQiIDogImZpbHRlciJdKHQpIH0sIGZpbmRXaGVyZTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMud2hlcmUodCwgdHJ1ZSkgfSwgc29ydDogZnVuY3Rpb24gKHQpIHsgdmFyIGUgPSB0aGlzLmNvbXBhcmF0b3I7IGlmICghZSkgdGhyb3cgbmV3IEVycm9yKCJDYW5ub3Qgc29ydCBhIHNldCB3aXRob3V0IGEgY29tcGFyYXRvciIpOyB0IHx8ICh0ID0ge30pOyB2YXIgbiA9IGUubGVuZ3RoOyBpZiAoaS5pc0Z1bmN0aW9uKGUpKSBlID0gZS5iaW5kKHRoaXMpOyBpZiAobiA9PT0gMSB8fCBpLmlzU3RyaW5nKGUpKSB7IHRoaXMubW9kZWxzID0gdGhpcy5zb3J0QnkoZSkgfSBlbHNlIHsgdGhpcy5tb2RlbHMuc29ydChlKSB9IGlmICghdC5zaWxlbnQpIHRoaXMudHJpZ2dlcigic29ydCIsIHRoaXMsIHQpOyByZXR1cm4gdGhpcyB9LCBwbHVjazogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMubWFwKHQgKyAiIikgfSwgZmV0Y2g6IGZ1bmN0aW9uICh0KSB7IHQgPSBpLmV4dGVuZCh7IHBhcnNlOiB0cnVlIH0sIHQpOyB2YXIgZSA9IHQuc3VjY2VzczsgdmFyIG4gPSB0aGlzOyB0LnN1Y2Nlc3MgPSBmdW5jdGlvbiAoaSkgeyB2YXIgciA9IHQucmVzZXQgPyAicmVzZXQiIDogInNldCI7IG5bcl0oaSwgdCk7IGlmIChlKSBlLmNhbGwodC5jb250ZXh0LCBuLCBpLCB0KTsgbi50cmlnZ2VyKCJzeW5jIiwgbiwgaSwgdCkgfTsgRyh0aGlzLCB0KTsgcmV0dXJuIHRoaXMuc3luYygicmVhZCIsIHRoaXMsIHQpIH0sIGNyZWF0ZTogZnVuY3Rpb24gKHQsIGUpIHsgZSA9IGUgPyBpLmNsb25lKGUpIDoge307IHZhciBuID0gZS53YWl0OyB0ID0gdGhpcy5fcHJlcGFyZU1vZGVsKHQsIGUpOyBpZiAoIXQpIHJldHVybiBmYWxzZTsgaWYgKCFuKSB0aGlzLmFkZCh0LCBlKTsgdmFyIHIgPSB0aGlzOyB2YXIgcyA9IGUuc3VjY2VzczsgZS5zdWNjZXNzID0gZnVuY3Rpb24gKHQsIGUsIGkpIHsgaWYgKG4pIHIuYWRkKHQsIGkpOyBpZiAocykgcy5jYWxsKGkuY29udGV4dCwgdCwgZSwgaSkgfTsgdC5zYXZlKG51bGwsIGUpOyByZXR1cm4gdCB9LCBwYXJzZTogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIHQgfSwgY2xvbmU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5ldyB0aGlzLmNvbnN0cnVjdG9yKHRoaXMubW9kZWxzLCB7IG1vZGVsOiB0aGlzLm1vZGVsLCBjb21wYXJhdG9yOiB0aGlzLmNvbXBhcmF0b3IgfSkgfSwgbW9kZWxJZDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRbdGhpcy5tb2RlbC5wcm90b3R5cGUuaWRBdHRyaWJ1dGUgfHwgImlkIl0gfSwgdmFsdWVzOiBmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgRSh0aGlzLCBrKSB9LCBrZXlzOiBmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgRSh0aGlzLCBJKSB9LCBlbnRyaWVzOiBmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgRSh0aGlzLCBTKSB9LCBfcmVzZXQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5sZW5ndGggPSAwOyB0aGlzLm1vZGVscyA9IFtdOyB0aGlzLl9ieUlkID0ge30gfSwgX3ByZXBhcmVNb2RlbDogZnVuY3Rpb24gKHQsIGUpIHsgaWYgKHRoaXMuX2lzTW9kZWwodCkpIHsgaWYgKCF0LmNvbGxlY3Rpb24pIHQuY29sbGVjdGlvbiA9IHRoaXM7IHJldHVybiB0IH0gZSA9IGUgPyBpLmNsb25lKGUpIDoge307IGUuY29sbGVjdGlvbiA9IHRoaXM7IHZhciBuID0gbmV3IHRoaXMubW9kZWwodCwgZSk7IGlmICghbi52YWxpZGF0aW9uRXJyb3IpIHJldHVybiBuOyB0aGlzLnRyaWdnZXIoImludmFsaWQiLCB0aGlzLCBuLnZhbGlkYXRpb25FcnJvciwgZSk7IHJldHVybiBmYWxzZSB9LCBfcmVtb3ZlTW9kZWxzOiBmdW5jdGlvbiAodCwgZSkgeyB2YXIgaSA9IFtdOyBmb3IgKHZhciBuID0gMDsgbiA8IHQubGVuZ3RoOyBuKyspIHsgdmFyIHIgPSB0aGlzLmdldCh0W25dKTsgaWYgKCFyKSBjb250aW51ZTsgdmFyIHMgPSB0aGlzLmluZGV4T2Yocik7IHRoaXMubW9kZWxzLnNwbGljZShzLCAxKTsgdGhpcy5sZW5ndGgtLTsgZGVsZXRlIHRoaXMuX2J5SWRbci5jaWRdOyB2YXIgYSA9IHRoaXMubW9kZWxJZChyLmF0dHJpYnV0ZXMpOyBpZiAoYSAhPSBudWxsKSBkZWxldGUgdGhpcy5fYnlJZFthXTsgaWYgKCFlLnNpbGVudCkgeyBlLmluZGV4ID0gczsgci50cmlnZ2VyKCJyZW1vdmUiLCByLCB0aGlzLCBlKSB9IGkucHVzaChyKTsgdGhpcy5fcmVtb3ZlUmVmZXJlbmNlKHIsIGUpIH0gcmV0dXJuIGkgfSwgX2lzTW9kZWw6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0IGluc3RhbmNlb2YgbSB9LCBfYWRkUmVmZXJlbmNlOiBmdW5jdGlvbiAodCwgZSkgeyB0aGlzLl9ieUlkW3QuY2lkXSA9IHQ7IHZhciBpID0gdGhpcy5tb2RlbElkKHQuYXR0cmlidXRlcyk7IGlmIChpICE9IG51bGwpIHRoaXMuX2J5SWRbaV0gPSB0OyB0Lm9uKCJhbGwiLCB0aGlzLl9vbk1vZGVsRXZlbnQsIHRoaXMpIH0sIF9yZW1vdmVSZWZlcmVuY2U6IGZ1bmN0aW9uICh0LCBlKSB7IGRlbGV0ZSB0aGlzLl9ieUlkW3QuY2lkXTsgdmFyIGkgPSB0aGlzLm1vZGVsSWQodC5hdHRyaWJ1dGVzKTsgaWYgKGkgIT0gbnVsbCkgZGVsZXRlIHRoaXMuX2J5SWRbaV07IGlmICh0aGlzID09PSB0LmNvbGxlY3Rpb24pIGRlbGV0ZSB0LmNvbGxlY3Rpb247IHQub2ZmKCJhbGwiLCB0aGlzLl9vbk1vZGVsRXZlbnQsIHRoaXMpIH0sIF9vbk1vZGVsRXZlbnQ6IGZ1bmN0aW9uICh0LCBlLCBpLCBuKSB7IGlmIChlKSB7IGlmICgodCA9PT0gImFkZCIgfHwgdCA9PT0gInJlbW92ZSIpICYmIGkgIT09IHRoaXMpIHJldHVybjsgaWYgKHQgPT09ICJkZXN0cm95IikgdGhpcy5yZW1vdmUoZSwgbik7IGlmICh0ID09PSAiY2hhbmdlIikgeyB2YXIgciA9IHRoaXMubW9kZWxJZChlLnByZXZpb3VzQXR0cmlidXRlcygpKTsgdmFyIHMgPSB0aGlzLm1vZGVsSWQoZS5hdHRyaWJ1dGVzKTsgaWYgKHIgIT09IHMpIHsgaWYgKHIgIT0gbnVsbCkgZGVsZXRlIHRoaXMuX2J5SWRbcl07IGlmIChzICE9IG51bGwpIHRoaXMuX2J5SWRbc10gPSBlIH0gfSB9IHRoaXMudHJpZ2dlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIH0gfSk7IHZhciB3ID0gdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBTeW1ib2wuaXRlcmF0b3I7IGlmICh3KSB7IF8ucHJvdG90eXBlW3ddID0gXy5wcm90b3R5cGUudmFsdWVzIH0gdmFyIEUgPSBmdW5jdGlvbiAodCwgZSkgeyB0aGlzLl9jb2xsZWN0aW9uID0gdDsgdGhpcy5fa2luZCA9IGU7IHRoaXMuX2luZGV4ID0gMCB9OyB2YXIgayA9IDE7IHZhciBJID0gMjsgdmFyIFMgPSAzOyBpZiAodykgeyBFLnByb3RvdHlwZVt3XSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMgfSB9IEUucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbiAoKSB7IGlmICh0aGlzLl9jb2xsZWN0aW9uKSB7IGlmICh0aGlzLl9pbmRleCA8IHRoaXMuX2NvbGxlY3Rpb24ubGVuZ3RoKSB7IHZhciB0ID0gdGhpcy5fY29sbGVjdGlvbi5hdCh0aGlzLl9pbmRleCk7IHRoaXMuX2luZGV4Kys7IHZhciBlOyBpZiAodGhpcy5fa2luZCA9PT0gaykgeyBlID0gdCB9IGVsc2UgeyB2YXIgaSA9IHRoaXMuX2NvbGxlY3Rpb24ubW9kZWxJZCh0LmF0dHJpYnV0ZXMpOyBpZiAodGhpcy5fa2luZCA9PT0gSSkgeyBlID0gaSB9IGVsc2UgeyBlID0gW2ksIHRdIH0gfSByZXR1cm4geyB2YWx1ZTogZSwgZG9uZTogZmFsc2UgfSB9IHRoaXMuX2NvbGxlY3Rpb24gPSB2b2lkIDAgfSByZXR1cm4geyB2YWx1ZTogdm9pZCAwLCBkb25lOiB0cnVlIH0gfTsgdmFyIFQgPSBlLlZpZXcgPSBmdW5jdGlvbiAodCkgeyB0aGlzLmNpZCA9IGkudW5pcXVlSWQoInZpZXciKTsgdGhpcy5wcmVpbml0aWFsaXplLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IGkuZXh0ZW5kKHRoaXMsIGkucGljayh0LCBIKSk7IHRoaXMuX2Vuc3VyZUVsZW1lbnQoKTsgdGhpcy5pbml0aWFsaXplLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfTsgdmFyIFAgPSAvXihcUyspXHMqKC4qKSQvOyB2YXIgSCA9IFsibW9kZWwiLCAiY29sbGVjdGlvbiIsICJlbCIsICJpZCIsICJhdHRyaWJ1dGVzIiwgImNsYXNzTmFtZSIsICJ0YWdOYW1lIiwgImV2ZW50cyJdOyBpLmV4dGVuZChULnByb3RvdHlwZSwgYSwgeyB0YWdOYW1lOiAiZGl2IiwgJDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMuJGVsLmZpbmQodCkgfSwgcHJlaW5pdGlhbGl6ZTogZnVuY3Rpb24gKCkgeyB9LCBpbml0aWFsaXplOiBmdW5jdGlvbiAoKSB7IH0sIHJlbmRlcjogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcyB9LCByZW1vdmU6IGZ1bmN0aW9uICgpIHsgdGhpcy5fcmVtb3ZlRWxlbWVudCgpOyB0aGlzLnN0b3BMaXN0ZW5pbmcoKTsgcmV0dXJuIHRoaXMgfSwgX3JlbW92ZUVsZW1lbnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy4kZWwucmVtb3ZlKCkgfSwgc2V0RWxlbWVudDogZnVuY3Rpb24gKHQpIHsgdGhpcy51bmRlbGVnYXRlRXZlbnRzKCk7IHRoaXMuX3NldEVsZW1lbnQodCk7IHRoaXMuZGVsZWdhdGVFdmVudHMoKTsgcmV0dXJuIHRoaXMgfSwgX3NldEVsZW1lbnQ6IGZ1bmN0aW9uICh0KSB7IHRoaXMuJGVsID0gdCBpbnN0YW5jZW9mIGUuJCA/IHQgOiBlLiQodCk7IHRoaXMuZWwgPSB0aGlzLiRlbFswXSB9LCBkZWxlZ2F0ZUV2ZW50czogZnVuY3Rpb24gKHQpIHsgdCB8fCAodCA9IGkucmVzdWx0KHRoaXMsICJldmVudHMiKSk7IGlmICghdCkgcmV0dXJuIHRoaXM7IHRoaXMudW5kZWxlZ2F0ZUV2ZW50cygpOyBmb3IgKHZhciBlIGluIHQpIHsgdmFyIG4gPSB0W2VdOyBpZiAoIWkuaXNGdW5jdGlvbihuKSkgbiA9IHRoaXNbbl07IGlmICghbikgY29udGludWU7IHZhciByID0gZS5tYXRjaChQKTsgdGhpcy5kZWxlZ2F0ZShyWzFdLCByWzJdLCBuLmJpbmQodGhpcykpIH0gcmV0dXJuIHRoaXMgfSwgZGVsZWdhdGU6IGZ1bmN0aW9uICh0LCBlLCBpKSB7IHRoaXMuJGVsLm9uKHQgKyAiLmRlbGVnYXRlRXZlbnRzIiArIHRoaXMuY2lkLCBlLCBpKTsgcmV0dXJuIHRoaXMgfSwgdW5kZWxlZ2F0ZUV2ZW50czogZnVuY3Rpb24gKCkgeyBpZiAodGhpcy4kZWwpIHRoaXMuJGVsLm9mZigiLmRlbGVnYXRlRXZlbnRzIiArIHRoaXMuY2lkKTsgcmV0dXJuIHRoaXMgfSwgdW5kZWxlZ2F0ZTogZnVuY3Rpb24gKHQsIGUsIGkpIHsgdGhpcy4kZWwub2ZmKHQgKyAiLmRlbGVnYXRlRXZlbnRzIiArIHRoaXMuY2lkLCBlLCBpKTsgcmV0dXJuIHRoaXMgfSwgX2NyZWF0ZUVsZW1lbnQ6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHQpIH0sIF9lbnN1cmVFbGVtZW50OiBmdW5jdGlvbiAoKSB7IGlmICghdGhpcy5lbCkgeyB2YXIgdCA9IGkuZXh0ZW5kKHt9LCBpLnJlc3VsdCh0aGlzLCAiYXR0cmlidXRlcyIpKTsgaWYgKHRoaXMuaWQpIHQuaWQgPSBpLnJlc3VsdCh0aGlzLCAiaWQiKTsgaWYgKHRoaXMuY2xhc3NOYW1lKSB0WyJjbGFzcyJdID0gaS5yZXN1bHQodGhpcywgImNsYXNzTmFtZSIpOyB0aGlzLnNldEVsZW1lbnQodGhpcy5fY3JlYXRlRWxlbWVudChpLnJlc3VsdCh0aGlzLCAidGFnTmFtZSIpKSk7IHRoaXMuX3NldEF0dHJpYnV0ZXModCkgfSBlbHNlIHsgdGhpcy5zZXRFbGVtZW50KGkucmVzdWx0KHRoaXMsICJlbCIpKSB9IH0sIF9zZXRBdHRyaWJ1dGVzOiBmdW5jdGlvbiAodCkgeyB0aGlzLiRlbC5hdHRyKHQpIH0gfSk7IHZhciAkID0gZnVuY3Rpb24gKHQsIGUsIGksIG4pIHsgc3dpdGNoIChlKSB7IGNhc2UgMTogcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRbaV0odGhpc1tuXSkgfTsgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHRbaV0odGhpc1tuXSwgZSkgfTsgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGUsIHIpIHsgcmV0dXJuIHRbaV0odGhpc1tuXSwgQyhlLCB0aGlzKSwgcikgfTsgY2FzZSA0OiByZXR1cm4gZnVuY3Rpb24gKGUsIHIsIHMpIHsgcmV0dXJuIHRbaV0odGhpc1tuXSwgQyhlLCB0aGlzKSwgciwgcykgfTsgZGVmYXVsdDogcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIGUgPSBzLmNhbGwoYXJndW1lbnRzKTsgZS51bnNoaWZ0KHRoaXNbbl0pOyByZXR1cm4gdFtpXS5hcHBseSh0LCBlKSB9IH0gfTsgdmFyIEEgPSBmdW5jdGlvbiAodCwgZSwgbiwgcikgeyBpLmVhY2gobiwgZnVuY3Rpb24gKGksIG4pIHsgaWYgKGVbbl0pIHQucHJvdG90eXBlW25dID0gJChlLCBpLCBuLCByKSB9KSB9OyB2YXIgQyA9IGZ1bmN0aW9uICh0LCBlKSB7IGlmIChpLmlzRnVuY3Rpb24odCkpIHJldHVybiB0OyBpZiAoaS5pc09iamVjdCh0KSAmJiAhZS5faXNNb2RlbCh0KSkgcmV0dXJuIFIodCk7IGlmIChpLmlzU3RyaW5nKHQpKSByZXR1cm4gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIGUuZ2V0KHQpIH07IHJldHVybiB0IH07IHZhciBSID0gZnVuY3Rpb24gKHQpIHsgdmFyIGUgPSBpLm1hdGNoZXModCk7IHJldHVybiBmdW5jdGlvbiAodCkgeyByZXR1cm4gZSh0LmF0dHJpYnV0ZXMpIH0gfTsgdmFyIE0gPSB7IGZvckVhY2g6IDMsIGVhY2g6IDMsIG1hcDogMywgY29sbGVjdDogMywgcmVkdWNlOiAwLCBmb2xkbDogMCwgaW5qZWN0OiAwLCByZWR1Y2VSaWdodDogMCwgZm9sZHI6IDAsIGZpbmQ6IDMsIGRldGVjdDogMywgZmlsdGVyOiAzLCBzZWxlY3Q6IDMsIHJlamVjdDogMywgZXZlcnk6IDMsIGFsbDogMywgc29tZTogMywgYW55OiAzLCBpbmNsdWRlOiAzLCBpbmNsdWRlczogMywgY29udGFpbnM6IDMsIGludm9rZTogMCwgbWF4OiAzLCBtaW46IDMsIHRvQXJyYXk6IDEsIHNpemU6IDEsIGZpcnN0OiAzLCBoZWFkOiAzLCB0YWtlOiAzLCBpbml0aWFsOiAzLCByZXN0OiAzLCB0YWlsOiAzLCBkcm9wOiAzLCBsYXN0OiAzLCB3aXRob3V0OiAwLCBkaWZmZXJlbmNlOiAwLCBpbmRleE9mOiAzLCBzaHVmZmxlOiAxLCBsYXN0SW5kZXhPZjogMywgaXNFbXB0eTogMSwgY2hhaW46IDEsIHNhbXBsZTogMywgcGFydGl0aW9uOiAzLCBncm91cEJ5OiAzLCBjb3VudEJ5OiAzLCBzb3J0Qnk6IDMsIGluZGV4Qnk6IDMsIGZpbmRJbmRleDogMywgZmluZExhc3RJbmRleDogMyB9OyB2YXIgTiA9IHsga2V5czogMSwgdmFsdWVzOiAxLCBwYWlyczogMSwgaW52ZXJ0OiAxLCBwaWNrOiAwLCBvbWl0OiAwLCBjaGFpbjogMSwgaXNFbXB0eTogMSB9OyBpLmVhY2goW1tfLCBNLCAibW9kZWxzIl0sIFttLCBOLCAiYXR0cmlidXRlcyJdXSwgZnVuY3Rpb24gKHQpIHsgdmFyIGUgPSB0WzBdLCBuID0gdFsxXSwgciA9IHRbMl07IGUubWl4aW4gPSBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IGkucmVkdWNlKGkuZnVuY3Rpb25zKHQpLCBmdW5jdGlvbiAodCwgZSkgeyB0W2VdID0gMDsgcmV0dXJuIHQgfSwge30pOyBBKGUsIHQsIG4sIHIpIH07IEEoZSwgaSwgbiwgcikgfSk7IGUuc3luYyA9IGZ1bmN0aW9uICh0LCBuLCByKSB7IHZhciBzID0galt0XTsgaS5kZWZhdWx0cyhyIHx8IChyID0ge30pLCB7IGVtdWxhdGVIVFRQOiBlLmVtdWxhdGVIVFRQLCBlbXVsYXRlSlNPTjogZS5lbXVsYXRlSlNPTiB9KTsgdmFyIGEgPSB7IHR5cGU6IHMsIGRhdGFUeXBlOiAianNvbiIgfTsgaWYgKCFyLnVybCkgeyBhLnVybCA9IGkucmVzdWx0KG4sICJ1cmwiKSB8fCBWKCkgfSBpZiAoci5kYXRhID09IG51bGwgJiYgbiAmJiAodCA9PT0gImNyZWF0ZSIgfHwgdCA9PT0gInVwZGF0ZSIgfHwgdCA9PT0gInBhdGNoIikpIHsgYS5jb250ZW50VHlwZSA9ICJhcHBsaWNhdGlvbi9qc29uIjsgYS5kYXRhID0gSlNPTi5zdHJpbmdpZnkoci5hdHRycyB8fCBuLnRvSlNPTihyKSkgfSBpZiAoci5lbXVsYXRlSlNPTikgeyBhLmNvbnRlbnRUeXBlID0gImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCI7IGEuZGF0YSA9IGEuZGF0YSA/IHsgbW9kZWw6IGEuZGF0YSB9IDoge30gfSBpZiAoci5lbXVsYXRlSFRUUCAmJiAocyA9PT0gIlBVVCIgfHwgcyA9PT0gIkRFTEVURSIgfHwgcyA9PT0gIlBBVENIIikpIHsgYS50eXBlID0gIlBPU1QiOyBpZiAoci5lbXVsYXRlSlNPTikgYS5kYXRhLl9tZXRob2QgPSBzOyB2YXIgbyA9IHIuYmVmb3JlU2VuZDsgci5iZWZvcmVTZW5kID0gZnVuY3Rpb24gKHQpIHsgdC5zZXRSZXF1ZXN0SGVhZGVyKCJYLUhUVFAtTWV0aG9kLU92ZXJyaWRlIiwgcyk7IGlmIChvKSByZXR1cm4gby5hcHBseSh0aGlzLCBhcmd1bWVudHMpIH0gfSBpZiAoYS50eXBlICE9PSAiR0VUIiAmJiAhci5lbXVsYXRlSlNPTikgeyBhLnByb2Nlc3NEYXRhID0gZmFsc2UgfSB2YXIgaCA9IHIuZXJyb3I7IHIuZXJyb3IgPSBmdW5jdGlvbiAodCwgZSwgaSkgeyByLnRleHRTdGF0dXMgPSBlOyByLmVycm9yVGhyb3duID0gaTsgaWYgKGgpIGguY2FsbChyLmNvbnRleHQsIHQsIGUsIGkpIH07IHZhciB1ID0gci54aHIgPSBlLmFqYXgoaS5leHRlbmQoYSwgcikpOyBuLnRyaWdnZXIoInJlcXVlc3QiLCBuLCB1LCByKTsgcmV0dXJuIHUgfTsgdmFyIGogPSB7IGNyZWF0ZTogIlBPU1QiLCB1cGRhdGU6ICJQVVQiLCBwYXRjaDogIlBBVENIIiwgImRlbGV0ZSI6ICJERUxFVEUiLCByZWFkOiAiR0VUIiB9OyBlLmFqYXggPSBmdW5jdGlvbiAoKSB7IHJldHVybiBlLiQuYWpheC5hcHBseShlLiQsIGFyZ3VtZW50cykgfTsgdmFyIE8gPSBlLlJvdXRlciA9IGZ1bmN0aW9uICh0KSB7IHQgfHwgKHQgPSB7fSk7IHRoaXMucHJlaW5pdGlhbGl6ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyBpZiAodC5yb3V0ZXMpIHRoaXMucm91dGVzID0gdC5yb3V0ZXM7IHRoaXMuX2JpbmRSb3V0ZXMoKTsgdGhpcy5pbml0aWFsaXplLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfTsgdmFyIFUgPSAvXCgoLio/KVwpL2c7IHZhciB6ID0gLyhcKFw/KT86XHcrL2c7IHZhciBxID0gL1wqXHcrL2c7IHZhciBGID0gL1tcLXt9XFtcXSs/LixcXFxeJHwjXHNdL2c7IGkuZXh0ZW5kKE8ucHJvdG90eXBlLCBhLCB7IHByZWluaXRpYWxpemU6IGZ1bmN0aW9uICgpIHsgfSwgaW5pdGlhbGl6ZTogZnVuY3Rpb24gKCkgeyB9LCByb3V0ZTogZnVuY3Rpb24gKHQsIG4sIHIpIHsgaWYgKCFpLmlzUmVnRXhwKHQpKSB0ID0gdGhpcy5fcm91dGVUb1JlZ0V4cCh0KTsgaWYgKGkuaXNGdW5jdGlvbihuKSkgeyByID0gbjsgbiA9ICIiIH0gaWYgKCFyKSByID0gdGhpc1tuXTsgdmFyIHMgPSB0aGlzOyBlLmhpc3Rvcnkucm91dGUodCwgZnVuY3Rpb24gKGkpIHsgdmFyIGEgPSBzLl9leHRyYWN0UGFyYW1ldGVycyh0LCBpKTsgaWYgKHMuZXhlY3V0ZShyLCBhLCBuKSAhPT0gZmFsc2UpIHsgcy50cmlnZ2VyLmFwcGx5KHMsIFsicm91dGU6IiArIG5dLmNvbmNhdChhKSk7IHMudHJpZ2dlcigicm91dGUiLCBuLCBhKTsgZS5oaXN0b3J5LnRyaWdnZXIoInJvdXRlIiwgcywgbiwgYSkgfSB9KTsgcmV0dXJuIHRoaXMgfSwgZXhlY3V0ZTogZnVuY3Rpb24gKHQsIGUsIGkpIHsgaWYgKHQpIHQuYXBwbHkodGhpcywgZSkgfSwgbmF2aWdhdGU6IGZ1bmN0aW9uICh0LCBpKSB7IGUuaGlzdG9yeS5uYXZpZ2F0ZSh0LCBpKTsgcmV0dXJuIHRoaXMgfSwgX2JpbmRSb3V0ZXM6IGZ1bmN0aW9uICgpIHsgaWYgKCF0aGlzLnJvdXRlcykgcmV0dXJuOyB0aGlzLnJvdXRlcyA9IGkucmVzdWx0KHRoaXMsICJyb3V0ZXMiKTsgdmFyIHQsIGUgPSBpLmtleXModGhpcy5yb3V0ZXMpOyB3aGlsZSAoKHQgPSBlLnBvcCgpKSAhPSBudWxsKSB7IHRoaXMucm91dGUodCwgdGhpcy5yb3V0ZXNbdF0pIH0gfSwgX3JvdXRlVG9SZWdFeHA6IGZ1bmN0aW9uICh0KSB7IHQgPSB0LnJlcGxhY2UoRiwgIlxcJCYiKS5yZXBsYWNlKFUsICIoPzokMSk/IikucmVwbGFjZSh6LCBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gZSA/IHQgOiAiKFteLz9dKykiIH0pLnJlcGxhY2UocSwgIihbXj9dKj8pIik7IHJldHVybiBuZXcgUmVnRXhwKCJeIiArIHQgKyAiKD86XFw/KFtcXHNcXFNdKikpPyQiKSB9LCBfZXh0cmFjdFBhcmFtZXRlcnM6IGZ1bmN0aW9uICh0LCBlKSB7IHZhciBuID0gdC5leGVjKGUpLnNsaWNlKDEpOyByZXR1cm4gaS5tYXAobiwgZnVuY3Rpb24gKHQsIGUpIHsgaWYgKGUgPT09IG4ubGVuZ3RoIC0gMSkgcmV0dXJuIHQgfHwgbnVsbDsgcmV0dXJuIHQgPyBkZWNvZGVVUklDb21wb25lbnQodCkgOiBudWxsIH0pIH0gfSk7IHZhciBCID0gZS5IaXN0b3J5ID0gZnVuY3Rpb24gKCkgeyB0aGlzLmhhbmRsZXJzID0gW107IHRoaXMuY2hlY2tVcmwgPSB0aGlzLmNoZWNrVXJsLmJpbmQodGhpcyk7IGlmICh0eXBlb2Ygd2luZG93ICE9PSAidW5kZWZpbmVkIikgeyB0aGlzLmxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uOyB0aGlzLmhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeSB9IH07IHZhciBKID0gL15bI1wvXXxccyskL2c7IHZhciBMID0gL15cLyt8XC8rJC9nOyB2YXIgVyA9IC8jLiokLzsgQi5zdGFydGVkID0gZmFsc2U7IGkuZXh0ZW5kKEIucHJvdG90eXBlLCBhLCB7IGludGVydmFsOiA1MCwgYXRSb290OiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcy5sb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9bXlwvXSQvLCAiJCYvIik7IHJldHVybiB0ID09PSB0aGlzLnJvb3QgJiYgIXRoaXMuZ2V0U2VhcmNoKCkgfSwgbWF0Y2hSb290OiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcy5kZWNvZGVGcmFnbWVudCh0aGlzLmxvY2F0aW9uLnBhdGhuYW1lKTsgdmFyIGUgPSB0LnNsaWNlKDAsIHRoaXMucm9vdC5sZW5ndGggLSAxKSArICIvIjsgcmV0dXJuIGUgPT09IHRoaXMucm9vdCB9LCBkZWNvZGVGcmFnbWVudDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGRlY29kZVVSSSh0LnJlcGxhY2UoLyUyNS9nLCAiJTI1MjUiKSkgfSwgZ2V0U2VhcmNoOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcy5sb2NhdGlvbi5ocmVmLnJlcGxhY2UoLyMuKi8sICIiKS5tYXRjaCgvXD8uKy8pOyByZXR1cm4gdCA/IHRbMF0gOiAiIiB9LCBnZXRIYXNoOiBmdW5jdGlvbiAodCkgeyB2YXIgZSA9ICh0IHx8IHRoaXMpLmxvY2F0aW9uLmhyZWYubWF0Y2goLyMoLiopJC8pOyByZXR1cm4gZSA/IGVbMV0gOiAiIiB9LCBnZXRQYXRoOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcy5kZWNvZGVGcmFnbWVudCh0aGlzLmxvY2F0aW9uLnBhdGhuYW1lICsgdGhpcy5nZXRTZWFyY2goKSkuc2xpY2UodGhpcy5yb290Lmxlbmd0aCAtIDEpOyByZXR1cm4gdC5jaGFyQXQoMCkgPT09ICIvIiA/IHQuc2xpY2UoMSkgOiB0IH0sIGdldEZyYWdtZW50OiBmdW5jdGlvbiAodCkgeyBpZiAodCA9PSBudWxsKSB7IGlmICh0aGlzLl91c2VQdXNoU3RhdGUgfHwgIXRoaXMuX3dhbnRzSGFzaENoYW5nZSkgeyB0ID0gdGhpcy5nZXRQYXRoKCkgfSBlbHNlIHsgdCA9IHRoaXMuZ2V0SGFzaCgpIH0gfSByZXR1cm4gdC5yZXBsYWNlKEosICIiKSB9LCBzdGFydDogZnVuY3Rpb24gKHQpIHsgaWYgKEIuc3RhcnRlZCkgdGhyb3cgbmV3IEVycm9yKCJCYWNrYm9uZS5oaXN0b3J5IGhhcyBhbHJlYWR5IGJlZW4gc3RhcnRlZCIpOyBCLnN0YXJ0ZWQgPSB0cnVlOyB0aGlzLm9wdGlvbnMgPSBpLmV4dGVuZCh7IHJvb3Q6ICIvIiB9LCB0aGlzLm9wdGlvbnMsIHQpOyB0aGlzLnJvb3QgPSB0aGlzLm9wdGlvbnMucm9vdDsgdGhpcy5fd2FudHNIYXNoQ2hhbmdlID0gdGhpcy5vcHRpb25zLmhhc2hDaGFuZ2UgIT09IGZhbHNlOyB0aGlzLl9oYXNIYXNoQ2hhbmdlID0gIm9uaGFzaGNoYW5nZSIgaW4gd2luZG93ICYmIChkb2N1bWVudC5kb2N1bWVudE1vZGUgPT09IHZvaWQgMCB8fCBkb2N1bWVudC5kb2N1bWVudE1vZGUgPiA3KTsgdGhpcy5fdXNlSGFzaENoYW5nZSA9IHRoaXMuX3dhbnRzSGFzaENoYW5nZSAmJiB0aGlzLl9oYXNIYXNoQ2hhbmdlOyB0aGlzLl93YW50c1B1c2hTdGF0ZSA9ICEhdGhpcy5vcHRpb25zLnB1c2hTdGF0ZTsgdGhpcy5faGFzUHVzaFN0YXRlID0gISEodGhpcy5oaXN0b3J5ICYmIHRoaXMuaGlzdG9yeS5wdXNoU3RhdGUpOyB0aGlzLl91c2VQdXNoU3RhdGUgPSB0aGlzLl93YW50c1B1c2hTdGF0ZSAmJiB0aGlzLl9oYXNQdXNoU3RhdGU7IHRoaXMuZnJhZ21lbnQgPSB0aGlzLmdldEZyYWdtZW50KCk7IHRoaXMucm9vdCA9ICgiLyIgKyB0aGlzLnJvb3QgKyAiLyIpLnJlcGxhY2UoTCwgIi8iKTsgaWYgKHRoaXMuX3dhbnRzSGFzaENoYW5nZSAmJiB0aGlzLl93YW50c1B1c2hTdGF0ZSkgeyBpZiAoIXRoaXMuX2hhc1B1c2hTdGF0ZSAmJiAhdGhpcy5hdFJvb3QoKSkgeyB2YXIgZSA9IHRoaXMucm9vdC5zbGljZSgwLCAtMSkgfHwgIi8iOyB0aGlzLmxvY2F0aW9uLnJlcGxhY2UoZSArICIjIiArIHRoaXMuZ2V0UGF0aCgpKTsgcmV0dXJuIHRydWUgfSBlbHNlIGlmICh0aGlzLl9oYXNQdXNoU3RhdGUgJiYgdGhpcy5hdFJvb3QoKSkgeyB0aGlzLm5hdmlnYXRlKHRoaXMuZ2V0SGFzaCgpLCB7IHJlcGxhY2U6IHRydWUgfSkgfSB9IGlmICghdGhpcy5faGFzSGFzaENoYW5nZSAmJiB0aGlzLl93YW50c0hhc2hDaGFuZ2UgJiYgIXRoaXMuX3VzZVB1c2hTdGF0ZSkgeyB0aGlzLmlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlmcmFtZSIpOyB0aGlzLmlmcmFtZS5zcmMgPSAiamF2YXNjcmlwdDowIjsgdGhpcy5pZnJhbWUuc3R5bGUuZGlzcGxheSA9ICJub25lIjsgdGhpcy5pZnJhbWUudGFiSW5kZXggPSAtMTsgdmFyIG4gPSBkb2N1bWVudC5ib2R5OyB2YXIgciA9IG4uaW5zZXJ0QmVmb3JlKHRoaXMuaWZyYW1lLCBuLmZpcnN0Q2hpbGQpLmNvbnRlbnRXaW5kb3c7IHIuZG9jdW1lbnQub3BlbigpOyByLmRvY3VtZW50LmNsb3NlKCk7IHIubG9jYXRpb24uaGFzaCA9ICIjIiArIHRoaXMuZnJhZ21lbnQgfSB2YXIgcyA9IHdpbmRvdy5hZGRFdmVudExpc3RlbmVyIHx8IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiBhdHRhY2hFdmVudCgib24iICsgdCwgZSkgfTsgaWYgKHRoaXMuX3VzZVB1c2hTdGF0ZSkgeyBzKCJwb3BzdGF0ZSIsIHRoaXMuY2hlY2tVcmwsIGZhbHNlKSB9IGVsc2UgaWYgKHRoaXMuX3VzZUhhc2hDaGFuZ2UgJiYgIXRoaXMuaWZyYW1lKSB7IHMoImhhc2hjaGFuZ2UiLCB0aGlzLmNoZWNrVXJsLCBmYWxzZSkgfSBlbHNlIGlmICh0aGlzLl93YW50c0hhc2hDaGFuZ2UpIHsgdGhpcy5fY2hlY2tVcmxJbnRlcnZhbCA9IHNldEludGVydmFsKHRoaXMuY2hlY2tVcmwsIHRoaXMuaW50ZXJ2YWwpIH0gaWYgKCF0aGlzLm9wdGlvbnMuc2lsZW50KSByZXR1cm4gdGhpcy5sb2FkVXJsKCkgfSwgc3RvcDogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyIHx8IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiBkZXRhY2hFdmVudCgib24iICsgdCwgZSkgfTsgaWYgKHRoaXMuX3VzZVB1c2hTdGF0ZSkgeyB0KCJwb3BzdGF0ZSIsIHRoaXMuY2hlY2tVcmwsIGZhbHNlKSB9IGVsc2UgaWYgKHRoaXMuX3VzZUhhc2hDaGFuZ2UgJiYgIXRoaXMuaWZyYW1lKSB7IHQoImhhc2hjaGFuZ2UiLCB0aGlzLmNoZWNrVXJsLCBmYWxzZSkgfSBpZiAodGhpcy5pZnJhbWUpIHsgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0aGlzLmlmcmFtZSk7IHRoaXMuaWZyYW1lID0gbnVsbCB9IGlmICh0aGlzLl9jaGVja1VybEludGVydmFsKSBjbGVhckludGVydmFsKHRoaXMuX2NoZWNrVXJsSW50ZXJ2YWwpOyBCLnN0YXJ0ZWQgPSBmYWxzZSB9LCByb3V0ZTogZnVuY3Rpb24gKHQsIGUpIHsgdGhpcy5oYW5kbGVycy51bnNoaWZ0KHsgcm91dGU6IHQsIGNhbGxiYWNrOiBlIH0pIH0sIGNoZWNrVXJsOiBmdW5jdGlvbiAodCkgeyB2YXIgZSA9IHRoaXMuZ2V0RnJhZ21lbnQoKTsgaWYgKGUgPT09IHRoaXMuZnJhZ21lbnQgJiYgdGhpcy5pZnJhbWUpIHsgZSA9IHRoaXMuZ2V0SGFzaCh0aGlzLmlmcmFtZS5jb250ZW50V2luZG93KSB9IGlmIChlID09PSB0aGlzLmZyYWdtZW50KSByZXR1cm4gZmFsc2U7IGlmICh0aGlzLmlmcmFtZSkgdGhpcy5uYXZpZ2F0ZShlKTsgdGhpcy5sb2FkVXJsKCkgfSwgbG9hZFVybDogZnVuY3Rpb24gKHQpIHsgaWYgKCF0aGlzLm1hdGNoUm9vdCgpKSByZXR1cm4gZmFsc2U7IHQgPSB0aGlzLmZyYWdtZW50ID0gdGhpcy5nZXRGcmFnbWVudCh0KTsgcmV0dXJuIGkuc29tZSh0aGlzLmhhbmRsZXJzLCBmdW5jdGlvbiAoZSkgeyBpZiAoZS5yb3V0ZS50ZXN0KHQpKSB7IGUuY2FsbGJhY2sodCk7IHJldHVybiB0cnVlIH0gfSkgfSwgbmF2aWdhdGU6IGZ1bmN0aW9uICh0LCBlKSB7IGlmICghQi5zdGFydGVkKSByZXR1cm4gZmFsc2U7IGlmICghZSB8fCBlID09PSB0cnVlKSBlID0geyB0cmlnZ2VyOiAhIWUgfTsgdCA9IHRoaXMuZ2V0RnJhZ21lbnQodCB8fCAiIik7IHZhciBpID0gdGhpcy5yb290OyBpZiAodCA9PT0gIiIgfHwgdC5jaGFyQXQoMCkgPT09ICI/IikgeyBpID0gaS5zbGljZSgwLCAtMSkgfHwgIi8iIH0gdmFyIG4gPSBpICsgdDsgdCA9IHQucmVwbGFjZShXLCAiIik7IHZhciByID0gdGhpcy5kZWNvZGVGcmFnbWVudCh0KTsgaWYgKHRoaXMuZnJhZ21lbnQgPT09IHIpIHJldHVybjsgdGhpcy5mcmFnbWVudCA9IHI7IGlmICh0aGlzLl91c2VQdXNoU3RhdGUpIHsgdGhpcy5oaXN0b3J5W2UucmVwbGFjZSA/ICJyZXBsYWNlU3RhdGUiIDogInB1c2hTdGF0ZSJdKHt9LCBkb2N1bWVudC50aXRsZSwgbikgfSBlbHNlIGlmICh0aGlzLl93YW50c0hhc2hDaGFuZ2UpIHsgdGhpcy5fdXBkYXRlSGFzaCh0aGlzLmxvY2F0aW9uLCB0LCBlLnJlcGxhY2UpOyBpZiAodGhpcy5pZnJhbWUgJiYgdCAhPT0gdGhpcy5nZXRIYXNoKHRoaXMuaWZyYW1lLmNvbnRlbnRXaW5kb3cpKSB7IHZhciBzID0gdGhpcy5pZnJhbWUuY29udGVudFdpbmRvdzsgaWYgKCFlLnJlcGxhY2UpIHsgcy5kb2N1bWVudC5vcGVuKCk7IHMuZG9jdW1lbnQuY2xvc2UoKSB9IHRoaXMuX3VwZGF0ZUhhc2gocy5sb2NhdGlvbiwgdCwgZS5yZXBsYWNlKSB9IH0gZWxzZSB7IHJldHVybiB0aGlzLmxvY2F0aW9uLmFzc2lnbihuKSB9IGlmIChlLnRyaWdnZXIpIHJldHVybiB0aGlzLmxvYWRVcmwodCkgfSwgX3VwZGF0ZUhhc2g6IGZ1bmN0aW9uICh0LCBlLCBpKSB7IGlmIChpKSB7IHZhciBuID0gdC5ocmVmLnJlcGxhY2UoLyhqYXZhc2NyaXB0OnwjKS4qJC8sICIiKTsgdC5yZXBsYWNlKG4gKyAiIyIgKyBlKSB9IGVsc2UgeyB0Lmhhc2ggPSAiIyIgKyBlIH0gfSB9KTsgZS5oaXN0b3J5ID0gbmV3IEI7IHZhciBEID0gZnVuY3Rpb24gKHQsIGUpIHsgdmFyIG4gPSB0aGlzOyB2YXIgcjsgaWYgKHQgJiYgaS5oYXModCwgImNvbnN0cnVjdG9yIikpIHsgciA9IHQuY29uc3RydWN0b3IgfSBlbHNlIHsgciA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG4uYXBwbHkodGhpcywgYXJndW1lbnRzKSB9IH0gaS5leHRlbmQociwgbiwgZSk7IHIucHJvdG90eXBlID0gaS5jcmVhdGUobi5wcm90b3R5cGUsIHQpOyByLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHI7IHIuX19zdXBlcl9fID0gbi5wcm90b3R5cGU7IHJldHVybiByIH07IG0uZXh0ZW5kID0gXy5leHRlbmQgPSBPLmV4dGVuZCA9IFQuZXh0ZW5kID0gQi5leHRlbmQgPSBEOyB2YXIgViA9IGZ1bmN0aW9uICgpIHsgdGhyb3cgbmV3IEVycm9yKCdBICJ1cmwiIHByb3BlcnR5IG9yIGZ1bmN0aW9uIG11c3QgYmUgc3BlY2lmaWVkJykgfTsgdmFyIEcgPSBmdW5jdGlvbiAodCwgZSkgeyB2YXIgaSA9IGUuZXJyb3I7IGUuZXJyb3IgPSBmdW5jdGlvbiAobikgeyBpZiAoaSkgaS5jYWxsKGUuY29udGV4dCwgdCwgbiwgZSk7IHQudHJpZ2dlcigiZXJyb3IiLCB0LCBuLCBlKSB9IH07IHJldHVybiBlIH0pOw==
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 29470
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: "application/x-javascript"
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 1500
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: js
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20160509T120132Z
