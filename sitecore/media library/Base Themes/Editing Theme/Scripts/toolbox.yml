---
ID: "f5b1e945-f6bf-4300-a381-432fc85e946d"
Parent: "b0652987-4e54-4675-9dd0-2d112ced361b"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: /sitecore/media library/Base Themes/Editing Theme/Scripts/toolbox
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/F5B1E945F6BF4300A381432FC85E946D.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  Value: 
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 23363
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: "application/x-javascript"
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: js
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20160509T085839Z
