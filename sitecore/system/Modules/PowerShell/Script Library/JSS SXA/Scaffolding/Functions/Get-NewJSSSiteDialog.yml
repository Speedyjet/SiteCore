---
ID: "b50a8d81-a1f3-4421-9ff9-8a501c16511a"
Parent: "7d8d6e32-75e6-4822-8491-f3c0a7a1577f"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: "/sitecore/system/Modules/PowerShell/Script Library/JSS SXA/Scaffolding/Functions/Get-NewJSSSiteDialog"
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    function Get-NewJSSSiteDialog {
        [CmdletBinding()]
        param(
            [Parameter(Mandatory = $true, Position = 0 )]
            [Item]$SiteLocation
        )
    
        begin {
            Write-Verbose "Cmdlet Get-NewJSSSiteDialog - Begin"
            Import-Function Get-ForbiddenSiteName
            Import-Function Get-ValidSiteSetupDefinition
            Import-Function Get-TenantTemplatesRoot
            Import-Function Get-TenantTemplate
            Import-Function Get-SiteDefinitions  
            Import-Function Get-OrderedDictionaryByKey
            Import-Function Get-JSSSiteDefinition
            Import-Function Get-InvokedTenantAction
            Import-Function Invoke-InputValidationStep
            Write-Progress -Activity ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingNewSiteDialog)) -CurrentOperation ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::BuildingNewSiteDialog)) -PercentComplete 0
        }
    
        process {
            Write-Verbose "Cmdlet Get-NewJSSSiteDialog - Process"
            Write-Progress -Activity ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingNewSiteDialog)) -CurrentOperation ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::GettingTenantTemplates)) -PercentComplete 20
            $TenantTemplates = Get-TenantTemplate (Get-TenantTemplatesRoot $SiteLocation)
    
    
            $dialogOptions = New-Object System.Collections.Specialized.OrderedDictionary
    
            [Item[]]$allDefinitions = Get-JSSSiteDefinition "*"
    
            Write-Progress -Activity ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingNewSiteDialog)) -CurrentOperation ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::GettingValidSiteDefinitions)) -PercentComplete 30
            $allDefinitions = Get-ValidSiteSetupDefinition $SiteLocation $allDefinitions
    
            Write-Progress -Activity ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingNewSiteDialog)) -CurrentOperation ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingDialogOptions)) -PercentComplete 50
            $nonSystemDefinitions = $allDefinitions | ? { ([Sitecore.Data.Fields.CheckboxField]$_.Fields['IsSystemModule']).Checked -eq $false } | ? { $_.IncludeIfInstalled.Length -eq 0 }
    
            $nonSystemDefinitions | % {
                $contextItem = Get-Item -Path master: -ID $_.ID
                $key = "$($_.Fields['Name'].Value)"
                $translatedFeatureName = $contextItem.Fields['Name'].Value
                if ([string]::IsNullOrEmpty($translatedFeatureName)) {
                    $translatedFeatureName = $key
                }
                if ($dialogOptions.Contains($translatedFeatureName)) {
                    $index = 2
                    do {
                        $translatedFeatureName = $translatedFeatureName + " [$index]"
                        $index++
                    } while ($dialogOptions.Contains($translatedFeatureName))
                }
    
                $dialogOptions.Add($translatedFeatureName, $_.ID)
            }
    
            $preSelectedDefinitions = $nonSystemDefinitions | ? { ([Sitecore.Data.Fields.CheckboxField]$_.Fields['IncludeByDefault']).Checked -eq $true } | % { $_.ID }
    
            $languages = [ordered]@{}
            Get-ChildItem -Path "/sitecore/system/languages" | % { $languages[$_.Name] = $_.Name } > $null
    
            $dialogOptions = Get-OrderedDictionaryByKey $dialogOptions
            Write-Progress -Activity ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingNewSiteDialog)) -CurrentOperation ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::OpeningNewSiteDialog)) -PercentComplete 100
    
            $siteName = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::NewSite)
            $hostName = "*"
            $virtualFolder = "/"
            $language = "en"
            
            $parameters = New-Object System.Collections.ArrayList  
    		
            $baseParameters = @(
                @{ Name = "siteName"; Title = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::SiteName); Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::General); }, `
                @{ Name = "hostName"; Title = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::HostName); Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::General)}, `
                @{ Name = "virtualFolder"; Title = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::VirtualFolder); Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::General)}, `
                @{ Name = "language"; Options = $languages; Title = [Sitecore.Globalization.Translate]::Text("Language"); Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::General); } `            
            )
    
            if ($dialogOptions.Count -gt 0) {
                $baseParameters += @{ Name = "preSelectedDefinitions"; Title = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::Features); Options = $dialogOptions; Editor = "checklist"; Tip = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::SelectTheFeaturesWhichShouldBeUsedInSite); Height = "330px"; Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::Features); }
            }
    
            $settings = New-Object System.Collections.ArrayList
            $parameters.AddRange($baseParameters)
            $allowedFields = "GraphQLEndpoint", "DeploymentSecret"
            $siteSettings = (New-Object Sitecore.XA.JSS.Foundation.Scaffolding.SiteSettingsModelBuilder).Create() | ? { $allowedFields.Contains($_.Name) -eq $true }
            $siteSettings | % {
                $settings.Add($_.Name) > $null
                Set-Variable $_.Name $_.Value
                $ht = @{Name = $_.Name; Title = $_.Title; Tab = $_.Tab}
                if ($_.Editor -eq "droptree") {
                    $ht["Editor"] = $_.Editor
                    $ht["Source"] = $_.Source
                }
    			
                if ($_.Editor -eq "check") {
                    $ht["Editor"] = $_.Editor
                }
                $parameters.Add($ht) > $null
            }
    
    		
            do {
                $result = Read-Variable -Parameters `
                    $parameters `
                    -Description $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.JSS.Foundation.Scaffolding.Texts]::ThisScriptWillCreateANewFullyFunctionalJSSSiteWithinYourSxaEnabledInstance)) `
                    -Title $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.JSS.Foundation.Scaffolding.Texts]::CreateAJSSSite)) -Width 500 -Height 600 `
                    -OkButtonName $([Sitecore.Globalization.Translate]::Text("Ok")) -CancelButtonName $([Sitecore.Globalization.Translate]::Text("Cancel")) `
                    -Validator {
                    $siteName = $variables.siteName.Value;
                    
                    
                    $pattern = "^[\w][\w\s\-]*(\(\d{1,}\)){0,1}$"
                    if ($siteName.Length -gt 100) {
                        $variables.siteName.Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::ThelengthofthevalueistoolongPleasespecifyavalueoflesstha)) -f 100
                        continue
                    }
                    if ([System.Text.RegularExpressions.Regex]::IsMatch($siteName, $pattern, [System.Text.RegularExpressions.RegexOptions]::ECMAScript) -eq $false) {
                        $variables.siteName.Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::IsNotAValidName)) -f $siteName
                        continue
                    }
                    if ($forbiddenSiteNames -contains $siteName -eq $true) {
                        $variables.siteName.Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::SiteWithThatNameAlreadyExists))
                        continue
                    }
                } `
                    -ValidatorParameters @{forbiddenSiteNames = (Get-ForbiddenSiteName $SiteLocation)}
    
                if ($result -ne "ok") {
                    Close-Window
                    Exit
                }
    
                $definitionItems = New-Object System.Collections.ArrayList($null)
                if ($preSelectedDefinitions ) {
                    Write-Verbose "Adding pre-selected features"
                    [Item[]]$preSelectedDefinitionItems = ($preSelectedDefinitions | % { Get-Item -Path master: -ID $_ })
                    $definitionItems.AddRange($preSelectedDefinitionItems)
                }
    
                [Item[]]$systemFeatures = $allDefinitions | ? { ([Sitecore.Data.Fields.CheckboxField]$_.Fields['IsSystemModule']).Checked -eq $true }
                if ($systemFeatures) {
                    Write-Verbose "Adding system features"
                    $definitionItems.AddRange($systemFeatures)
                }
    
                $invokedTenantActions = Get-InvokedTenantAction $TenantTemplates $SiteLocation
                [Item[]]$autoIncludedFeatures = $allDefinitions | ? { $_.IncludeIfInstalled.Length -gt 0 } | ? {
                    $_.IncludeIfInstalled.Split("|") | ? {
                        $tenantActionID = $_
                        $invokedTenantActions | ? { $_.ID -eq $tenantActionID }
                    }
                }
                if ($autoIncludedFeatures) {
                    Write-Verbose "Adding auto-included features"
                    $definitionItems.AddRange($autoIncludedFeatures)
                }
    			
                $model = New-Object Sitecore.XA.JSS.Foundation.Scaffolding.Models.CreateNewJSSSiteModel
                $model.SiteName = $siteName.TrimEnd(" ")
                $model.DefinitionItems = $definitionItems
                $model.Language = $language
                $model.HostName = $hostName
                $model.VirtualFolder = $virtualFolder
                $model.SiteLocation = $SiteLocation
                $nameValue = New-Object System.Collections.Specialized.NameValueCollection
                $settings | % {
                    $value = Get-Variable $_ -ValueOnly
                    $nameValue.Add($_, $value) > $null
                }
                $nameValue.Add("ImportLanguage", $language)
                $nameValue.Add("Name", $model.SiteName)
                $model.SiteSettings = $nameValue
                $inputValidationResult = Invoke-InputValidationStep $Model.DefinitionItems $Model
            } while (-not($inputValidationResult))
            return $model
        }
    
        end {
            Write-Verbose "Cmdlet Get-NewJSSSiteDialog - End"
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20181113T130006Z
