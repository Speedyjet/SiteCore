---
ID: "49ba3e33-0bd4-4337-8732-21521a402959"
Parent: "bb8a3f2e-b5ad-48ed-a083-0eb106301da7"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: "/sitecore/system/Modules/PowerShell/Script Library/SXA/SXA - Multisite/Functions/Site cloning/Show-CloneSiteDialog"
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    function Show-CloneSiteDialog {
        [CmdletBinding()]
        param(
            [Parameter(Mandatory = $true, Position = 0 )]
            [Item]$SourceSite
        )
    
        begin {
            Write-Verbose "Cmdlet Show-CloneSiteDialog - Begin"
            Import-Function Get-SettingsItem
            Import-Function Get-ForbiddenSiteName
            Import-Function Get-SiteDefinitionDialogKey
            Import-Function Get-UniqueName
            Import-Function Get-TenantItem
        }
    
        process {
            Write-Verbose "Cmdlet Show-CloneSiteDialog - Process"
            $forbiddenSiteNames = Get-ForbiddenSiteName $SourceSite.Parent
    
            $siteName = Get-UniqueName ($SourceSite.Name + " clone") $forbiddenSiteNames
            
            $Root = Get-TenantItem $SourceSite
            $dialogParameters = New-Object System.Collections.ArrayList
            $dialogParameters.Add(@{ Name = "siteName"; Title = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Multisite.Texts]::SiteName); Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Multisite.Texts]::CloneSiteDialogGeneralTab) })  > $null
            $dialogParameters.Add(@{ Name = "siteLocation"; Value = $Root; Title = ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Multisite.Texts]::SiteLocation)); Root = $Root.Paths.Path; Tab = ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Multisite.Texts]::CloneSiteDialogGeneralTab))})  > $null
            
            $settingsItem = Get-SettingsItem $SourceSite
            $sitegroupingItemTemplateId = "{9534A0CC-1055-4A4B-B624-05F2BE277211}"
            $siteItemTemplateId = "{2BB25752-B3BC-4F13-B9CB-38B906D21A33}"
            
            $sitesGroupingItem = $settingsItem.Children | ? { [Sitecore.Data.Managers.TemplateManager]::GetTemplate($_).InheritsFrom($sitegroupingItemTemplateId) } | Select-Object -First 1
            $siteDefinitionNames = Get-ChildItem -Path $sitesGroupingItem.Paths.Path -Recurse | ? { [Sitecore.Data.Managers.TemplateManager]::GetTemplate($_).InheritsFrom($siteItemTemplateId) } | % { $_.Name }
            
    
            $siteDefinitionKeys = New-Object -TypeName "System.Collections.Hashtable"
            $siteDefinitionNames | % {
                $siteDefinitionKey = Get-SiteDefinitionDialogKey $_            
                $siteDefinitionKeys.Add($_, $siteDefinitionKey)
                $siteDefinitionDefaultValue = Get-UniqueName "$($_)_clone" $forbiddenSiteNames
                
                $dialogParameters.Add(@{ Name = $siteDefinitionKey; Title = "'$_' site definition"; Value = $siteDefinitionDefaultValue; Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Multisite.Texts]::CloneSiteDialogDefinitionsTab) }) > $null
            }
            
            $result = Read-Variable -Parameters `
                $dialogParameters `
                -Description $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Multisite.Texts]::ThisScriptCloneAnExistingSite)) `
                -Title $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Multisite.Texts]::CloneSite)) -Width 500 -Height 600 `
                -OkButtonName $([Sitecore.Globalization.Translate]::Text("OK")) -CancelButtonName $([Sitecore.Globalization.Translate]::Text("Cancel")) `
                -Validator {
                $siteName = $variables.siteName.Value;
                $pattern = "^[\w][\w\s\-]*(\(\d{1,}\)){0,1}$"
                if ($siteName.Length -gt 100) {
                    $variables.siteName.Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.Texts]::ThelengthofthevalueistoolongPleasespecifyavalueoflesstha)) -f 100
                    continue
                }
                if ([System.Text.RegularExpressions.Regex]::IsMatch($siteName, $pattern, [System.Text.RegularExpressions.RegexOptions]::ECMAScript) -eq $false) {
                    $variables.siteName.Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Multisite.Texts]::IsNotAValidName)) -f $siteName
                    continue
                }
                
                $siteLocation = $variables.siteLocation.Value;
                $rootTemplate = [Sitecore.Data.Managers.TemplateManager]::GetTemplate($siteLocation)
                
                $inheritsFromTenant = $rootTemplate.InheritsFrom([Sitecore.XA.Foundation.Multisite.Templates+_BaseTenant]::ID)
                $inheritsFromSiteFolder = $rootTemplate.InheritsFrom([Sitecore.XA.Foundation.Multisite.Templates+_BaseSiteFolder]::ID)
                if(!$inheritsFromTenant -and !$inheritsFromSiteFolder){
                    $variables.siteLocation.Error = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Multisite.Texts]::InvalidLocation)
                }
    
                $siteDefinitionNames | % {
                    $key = $siteDefinitionKeys[$_]
                    $sdName = $variables."$key".Value;
                    $pattern = "^[\w][\w\s\-]*(\(\d{1,}\)){0,1}$"
                    if ($sdName.Length -gt 100) {
                        $variables."$key".Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.Texts]::ThelengthofthevalueistoolongPleasespecifyavalueoflesstha)) -f 100
                        continue
                    }
                    if ($forbiddenSiteNames -contains $sdName -eq $true) {
                        $variables."$key".Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::SiteWithThatNameAlreadyExists))
                        continue
                    }
                    if ([System.Text.RegularExpressions.Regex]::IsMatch($sdName, $pattern, [System.Text.RegularExpressions.RegexOptions]::ECMAScript) -eq $false) {
                        $variables."$key".Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::IsNotAValidName)) -f $sdName
                        continue
                    }
                }
            } `
                -ValidatorParameters @{
                forbiddenSiteNames  = $forbiddenSiteNames
                siteDefinitionNames = $siteDefinitionNames
                siteDefinitionKeys  = $siteDefinitionKeys
            }
    
            if ($result -ne "ok") {
                Close-Window
                Exit
            }
            
            
            $mapping = New-Object -TypeName "System.Collections.Hashtable"
            $siteDefinitionNames | ForEach-Object {
                $siteDefinitionName = $_            
                $key = Get-SiteDefinitionDialogKey $siteDefinitionName
                $value = $(Get-Variable $key -ErrorAction SilentlyContinue).Value
                $mapping.Add($siteDefinitionName, $value)
            }        
            
            @{
                siteName              = $siteName
                siteDefinitionmapping = $mapping
                siteLocation          = $siteLocation
            }
        }
    
        end {
            Write-Verbose "Cmdlet Show-CloneSiteDialog - End"
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20170529T090549Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
