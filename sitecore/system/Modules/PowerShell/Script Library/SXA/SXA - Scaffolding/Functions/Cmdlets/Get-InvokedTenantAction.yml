---
ID: "0775c571-4ee2-4068-94e5-c21e69704d0b"
Parent: "74ac6db3-58c5-4bf9-aa9f-26940029fd49"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: "/sitecore/system/Modules/PowerShell/Script Library/SXA/SXA - Scaffolding/Functions/Cmdlets/Get-InvokedTenantAction"
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    function Get-InvokedTenantAction {
        [CmdletBinding()]
        param(
            [Parameter(Mandatory = $true, Position = 0 )]
            [Item[]]$TenantTemplates,
    
            [Parameter(Mandatory = $true, Position = 1 )]
            [Item]$SiteLocation
        )
    
        begin {
            Write-Verbose "Cmdlet Get-InvokedTenantAction - Begin"
            Import-Function Get-ProjectTemplateBasedOnBaseTemplate
            Import-Function Invoke-ExecuteScript
            Import-Function Get-TenantItem
            Import-Function Get-Action
            Import-Function Get-TenantDefinition
        }
    
        process {
            Write-Verbose "Cmdlet Get-InvokedTenantAction - Process"
            $DefinitionItems = Get-TenantDefinition "*"
            $ModuleDefinitions = Get-Action $DefinitionItems
    
            $foundationAddBaseTemplate = $ModuleDefinitions   | ? { $_.TemplateName -eq "EditTenantTemplate" } | ? { $_.EditType -eq "AddBaseTemplate" }
            $foundationInsertOptions = $ModuleDefinitions   | ? { $_.TemplateName -eq "EditTenantTemplate" } | ? { $_.EditType -eq "AddInsertOptions" }
            $addItem = $ModuleDefinitions   | ? { $_.TemplateName -eq "AddItem" }
            $executeScript = $ModuleDefinitions   | ? { $_.TemplateName -eq "ExecuteScript"}
    
    
            $addItem | % {
                $itemName = $_._Name
                Write-Verbose "Processing $($_.ID.ToString())"
                $itemTemplate = (Get-Item -Path master: -ID $_._Template).Name
                $startLocation = (Get-TenantItem $SiteLocation).Paths.Path
                $query = "$startLocation//*[@@name='$itemName' and @@templatename='$itemTemplate']"
                $createdItems = Get-Item -Path master: -Language "*" -Query $query
                Write-Verbose "Created items count $($createdItems.Count) [$query]"
                if ($createdItems) {
                    $_
                }
            }
    
            $foundationInsertOptions | % {
                Write-Verbose "Processing action: $($_.Paths.Path))"
                [Sitecore.Data.Items.TemplateItem]$baseTemplate = Get-Item -Path master: -ID ($_.Fields['Template'].Value)
                [Sitecore.Data.Items.TemplateItem[]]$arguments = $_.Fields['Arguments'].Value.Split('|') | % {Get-Item -Path master: -ID $_}
    
                $template = Get-ProjectTemplateBasedOnBaseTemplate $TenantTemplates $baseTemplate.InnerItem.Template.InnerItem.ID | Wrap-Item
                if($template.Length -gt 1){ 
                    $template = $template | Sort-Object -Property @{Expression={$_."__Base template".Length }} -Descending | Select-Object -First 1 
                    Write-Verbose "Found more than one matching template. First one will be selected ($($template.ID))"
                }
                if ($template) {
                    Write-Verbose "Edited template was: $($template.Paths.Path)"
                    $standardValuesHolder = Get-Item -Path master: -ID $template.'___Standard values'
                    if ($standardValuesHolder) {
                        [Sitecore.Data.ID[]]$baseTemplates = $standardValuesHolder."__Masters".Split('|') | ? { [guid]::TryParse($_, [ref][guid]::Empty) }
                        if ($baseTemplates) {
                            $x = $arguments | % {
                                Write-Verbose "Added Insert Option $($_.ID)"
                                Write-Verbose "$baseTemplates"
                                if ($baseTemplates.Contains($_.ID)) {
                                    $true
                                }
                            }
    
                            if ($x.length -gt 0) {
                                $_
                            }
                        }
                    }
                }
            }
    
            $foundationAddBaseTemplate | % {
                Write-Verbose "Processing action: $($_.Paths.Path))"
                [Sitecore.Data.Items.TemplateItem]$baseTemplate = Get-Item -Path master: -ID ($_.Fields['Template'].Value)
                [Sitecore.Data.Items.TemplateItem[]]$arguments = $_.Fields['Arguments'].Value.Split('|') | % {Get-Item -Path master: -ID $_}
    
                $template = Get-ProjectTemplateBasedOnBaseTemplate $TenantTemplates $baseTemplate.InnerItem.Template.InnerItem.ID | Wrap-Item
                if($template.Length -gt 1){ 
                    $template = $template | Sort-Object -Property @{Expression={$_."__Base template".Length }} -Descending | Select-Object -First 1 
                    Write-Verbose "Found more than one matching template. First one will be selected ($($template.ID))"
                }            
                if ($template) {
                    Write-Verbose "Edited template was: $($template.Paths.Path)"
                    [Sitecore.Data.ID[]]$baseTemplates = $template."__Base Template".Split('|')
                    $x = $arguments | % {
                        Write-Verbose "Added Base template $($_.ID)"
                        Write-Verbose "$baseTemplates"
                        if ($baseTemplates.Contains($_.ID)) {
                            $true
                        }
                    }
    
                    if ($x.length -gt 0) {
                        $_
                    }
                }
            }
    
            $executeScript | % {
                $ScriptFieldName = 'ValidationScript'
                $validationScript = $_.Fields[$ScriptFieldName]
                if ($_.Fields[$ScriptFieldName].Value -ne "") {
                    $result = Invoke-ExecuteScript $_ $SiteLocation $TenantTemplates $ScriptFieldName
                    if ($result) {
                        $_
                    }
                }
            }
        }
        end {
            Write-Verbose "Cmdlet Get-InvokedTenantAction - End"
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20170914T115630Z
