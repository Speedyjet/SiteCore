---
ID: "65629109-5eb6-4dc1-8fa7-a6e5bf9e70f5"
Parent: "883896ff-bb23-4a3e-831e-f583d402d4f7"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: "/sitecore/system/Modules/PowerShell/Script Library/SXA/SXA - Scaffolding/Functions/Scaffolding/Module/Get-ModuleRootCandidate"
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    function Get-ModuleRootCandidate {
        [CmdletBinding()]
        param(
            [Parameter(Mandatory = $true, Position = 0 )]
            [Item]$CurrentItem
        )
    
        begin {
            Write-Verbose "Cmdlet Get-ModuleRootCandidate - Begin"
            Import-Function Get-ModuleStartLocation
            Import-Function Get-FolderForModule
        }
    
        process {
            Write-Verbose "Cmdlet Get-ModuleRootCandidate - Process"
            $locs = Get-ModuleStartLocation
            
            $candidates = @()
    
            $itemPath = $CurrentItem.Paths.Path
            $key = $locs.Keys | ? { $itemPath -like ($locs[$_] -f "*") } | Select-Object -First 1
            
            $startPath = ($locs[$key] -f "").TrimEnd("/")
            $loopFinishPatternpattern = "^$startPath/(Feature|Foundation|Project)$"
            
            $parent = $CurrentItem
            $result = $null
            while (($parent.Paths.Path -match $loopFinishPatternpattern -eq $false) -and $result -eq $null -and $parent -ne $null) {
                Write-Verbose "Checking $($parent.Paths.Path)"
                $missing = $locs.Keys | ? { (Get-FolderForModule $parent $_) -eq $null }
                Write-Verbose "`tScore: $($missing.Count)"  
                $candidates += @{ Score = $missing.Count; Item = $parent; }
    
                # perfect hit
                if ($missing.Count -eq 0) {
                    Write-Verbose "Found module root"
                    $result = $parent                
                }            
                $parent = $parent.Parent
            }
    
            # get the best candidate based on score
            if ($result -eq $null) {
                [array]::Reverse($candidates)
                $result = $candidates | Sort-Object @{Expression = {$_.Score}} | Select-Object -First 1 | % { $_.Item }
            }
            $result
        }
    
        end {
            Write-Verbose "Cmdlet Get-ModuleRootCandidate - End"
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20181024T101319Z
