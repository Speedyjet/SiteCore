---
ID: "3cbce37f-3eaa-43be-a433-ae84e40e1a83"
Parent: "df608d21-2980-49da-9804-7f818c8624d3"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: "/sitecore/system/Modules/PowerShell/Script Library/SXA/SXA - Security/Functions/Cmdlets/Get-ResolvedDomainTokens"
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    function Get-ResolvedDomainTokens {
        [CmdletBinding()]
        param(
            [Parameter(Mandatory = $true, Position = 0 )]
            [AllowEmptyString()]
            [AllowNull()]
            [string]$Value
        )
    
        begin {
            Write-Verbose "Cmdlet Get-ResolvedDomainTokens - Begin"
        }
    
        process {
            Write-Verbose "Cmdlet Get-ResolvedDomainTokens - Process"
            if ($Value) {
                Write-Verbose "Before: $Value"
    
                $rolesMapping = $global:ctx_RolesMapping
                foreach ($m in $rolesMapping.Keys) {
                    $allValue = $rolesMapping[$m]
                    $Value = $Value.Replace("`$tenantDomain\Tenant $m", $allValue)
                    $Value = $Value.Replace("`$siteDomain\Site $m", $allValue)
                }
    
                if ($global:ctx_TenantDomain) {
                    $Value = $Value.Replace('$tenantDomain', $global:ctx_TenantDomain)
                }
                if ($global:ctx_SiteDomain) {
                    $Value = $Value.Replace('$siteDomain', $global:ctx_SiteDomain)
                }
                Write-Verbose "After: $Value"
            }
            $Value
        }
    
        end {
            Write-Verbose "Cmdlet Get-ResolvedDomainTokens - End"
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20170406T073016Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
