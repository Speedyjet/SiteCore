---
ID: "88e61888-97dc-4537-ba17-af48dbc73aee"
Parent: "3b47c187-7f80-497f-95d9-16d072e3e6bd"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: "/sitecore/system/Modules/PowerShell/Script Library/SXA/SXA - Security/Functions/Set-TenantSecurity"
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function Get-DomainSelectionDialog
    Import-Function Get-CreateNewDomainDialog
    Import-Function Add-RoleMembers
    Import-Function Add-Role
    Import-Function Add-Roles
    Import-Function Get-RoleObjects
    Import-Function Test-AllRolesExist
    Import-Function Get-RoleIdentity
    
    function Set-TenantSecurity {
        [CmdletBinding()]
        param(
            [Parameter(Mandatory = $true, Position = 0 )]
            [Item]$TenantItem
        )
    
        begin {
            Write-Verbose "Cmdlet Set-TenantSecurity - Begin"
        }
    
        process {
            Write-Verbose "Cmdlet Set-TenantSecurity - Process"
            $defaultDomainName = $TenantItem.Name
            $domain = Get-DomainSelectionDialog
            if ($domain -eq $null) {
                $domain = Get-CreateNewDomainDialog $defaultDomainName
            }
            $domainName = $domain.Name
            $global:ctx_TenantDomain = $domainName
    
    
            $roleItems = Get-ChildItem -path "/sitecore/system/Settings/Feature/Experience Accelerator/Security/Security Setup/Tenant"
            $roleItems = Get-RoleObjects $roleItems
    
            if (-not(Test-AllRolesExist $roleItems)) {
                Add-Roles $roleItems
                Add-RoleMembers $roleItems
            }
    
            $params = @()
            $roleItems | ForEach-Object {
                $r = $_
                $roleType = $r.RoleType
                $value = Get-RoleIdentity $r.RoleName $r.RoleDomain
                $roleTitle = ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Feature.Security.Texts]::RoleMappingDialogRoleNameFormat)) -f $roleType
                $params += @{ Name = "_dlg_RoleType_$roleType"; Value = "$value"; Title = "$roleTitle"; Editor = "role multiple"}
            }
    
            $dialogTitle = ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Feature.Security.Texts]::RoleMappingDialogTitle)) -f ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Feature.Security.Texts]::Tenant))
            $dialogDescription = ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Feature.Security.Texts]::RoleMappingDialogDescription)) -f ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Feature.Security.Texts]::Tenant))
            $result2 = Read-Variable -Parameters  $params `
                -Description $dialogDescription `
                -Title $dialogTitle -Width 500 -Height 480 `
                -OkButtonName ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Feature.Security.Texts]::RoleMappingDialogOkButtonName)) -CancelButtonName ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Feature.Security.Texts]::RoleMappingDialogCancelButtonName)) -ShowHints
    
            if ($result2 -eq "cancel") {
                exit
            }
    
            $selection = New-Object System.Collections.Specialized.OrderedDictionary
            $roleItems | ForEach-Object {
                $r = $_
                $roleType = (Get-Item master: -id $r.RoleItem.RoleType).Value
                $value = $(Get-Variable "_dlg_RoleType_$roleType" -ErrorAction SilentlyContinue).Value
                $selection.Add($roleType, $value)
            }
            $TenantItem.RoleDomain = $domainName
            $selection
        }
    
        end {
            Write-Verbose "Cmdlet Set-TenantSecurity - End"
        }
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20170405T095305Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
