---
ID: "294a0b69-733f-4d26-b730-ac607f9ae895"
Parent: "f12bdc94-438e-4ff2-ae41-4f10ebf88504"
Template: "5205cd92-0242-45aa-bead-b5c6288f2138"
Path: "/sitecore/system/Modules/PowerShell/Script Library/SXA/SXA - Upgrade/Functions/Upgrade Scripts/Set Unique IDs for composites renderings"
DB: master
SharedFields:
- ID: "67223412-5752-426f-940f-f2f40df561f2"
  Hint: TargetVersion
  Value: 1408
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function Get-ItemByIdSafe
    
    $uidAccordion = "2A4334BD-A026-4DCE-BA51-40087AB58D1D"
    $uidCarousel = "CB7B1C66-77F9-45E4-9AA3-12AC3E1EDF5A"
    $uidFlip = "BB48912A-7AEE-4E2E-AE72-D92F30920D05"
    $uidTabs = "1292FC57-9F1D-48E4-943B-8B4A6EA865A1"
    
    $templateAccordion = "{A6DDAC75-7D24-4BDB-B3F6-5F47FBB21379}"
    $templateSlide = "{142E5FC1-EC62-4540-BAD9-CD88F337CD2E}"
    $templateFlipside = "{36F45117-539A-4A13-ABF8-F1F74CB4B249}"
    $templateTab = "{B27059E6-1190-4273-92A0-D22AF3C440B4}"
    
    function Get-Usages {
        param(
            [Parameter(Mandatory = $true, Position = 0)]
            [Sitecore.Data.ID]$UID,
            [Parameter(Mandatory = $false, Position = 1)]
            [Sitecore.Data.ID]$Template
        )
        $db = Get-Database "master"
        $db.DataManager.DataSource.SelectIDs($null, $Template, [Sitecore.FieldIDs]::FinalLayoutField, "*$UID*", $true)
        $db.DataManager.DataSource.SelectIDs($null, $Template, [Sitecore.FieldIDs]::LayoutField, "*$UID*", $true)
    }
    
    function Get-AffectedCompositeItems {
        [CmdletBinding()]
        param()
    
        begin {
            Write-Verbose "Cmdlet Get-AffectedCompositeItems - Begin"
        }
    
        process {
            Write-Verbose "Cmdlet Get-AffectedCompositeItems - Process"
            Get-Usages $uidAccordion    $templateAccordion  | % { Get-ItemByIdSafe $_ } | ? { $_.Paths.IsContentItem }
            Get-Usages $uidCarousel     $templateSlide      | % { Get-ItemByIdSafe $_ } | ? { $_.Paths.IsContentItem }
            Get-Usages $uidFlip         $templateFlipside   | % { Get-ItemByIdSafe $_ } | ? { $_.Paths.IsContentItem }
            Get-Usages $uidTabs         $templateTab        | % { Get-ItemByIdSafe $_ } | ? { $_.Paths.IsContentItem }
        }
        end {
            Write-Verbose "Cmdlet Get-AffectedCompositeItems - End"
        }   
    }
    
    function Set-UniqueId {
        [CmdletBinding()]
        param(
            [Parameter(Mandatory = $true, ValueFromPipeline = $true, Position = 0 )]
            [Item]$compositeItem
        )
    
        begin {
            Write-Verbose "Cmdlet Set-UniqueId - Begin"
        }
    
        process {
            Write-Verbose "Cmdlet Set-UniqueId - Process"
            $mapping = @{}
            $fieldValue = $compositeItem."__Renderings"
            [regex]::matches($fieldValue, "(?<=id=""{8B0393E9-EE25-4F0B-A5FD-777B3AD2C737}"".*uid="")+[{a-zA-Z0-9\-}]+(?=)", [System.Text.RegularExpressions.RegexOptions]::Multiline) | % {
                $oldId = $_.Value
                [Sitecore.Data.ID]$newId = [guid]::NewGuid()
                $fieldValue = $fieldValue.Replace($oldId, $newId)
                $mapping[$oldId] = $newId
            }
            $compositeItem."__Renderings" = $fieldValue
            $finalRenderings = $compositeItem."__Final Renderings"
            $mapping.keys | % {
                $oldId = $_
                $newId = $mapping[$_]
                $finalRenderings = $finalRenderings.Replace($oldId, $newId)
            }
            $compositeItem."__Final Renderings" = $finalRenderings
        }
        end {
            Write-Verbose "Cmdlet Set-UniqueId - End"
        }   
    }
    
    function ShouldRun () {
        $outdatedTemplates = Get-AffectedCompositeItems
        $outdatedTemplates.Count -gt 0
    }
    
    function Get-DialogParameters () {
    }
    
    function Invoke-UpgradeStep {
        [CmdletBinding(SupportsShouldProcess = $true)]
        param(
            [Parameter(Mandatory = $true, Position = 0 )]
            $arguments
        )
    
        process {
            Write-Verbose "Getting affected composite items . . ."
            $affectedCompositeItems = Get-AffectedCompositeItems
            
            Write-Verbose "Found $($affectedCompositeItems.Count) composite items"
    
            $result = New-Object Sitecore.XA.Foundation.Upgrade.Model.UpgradeStepResult
            try {
                $affectedCompositeItems | % { 
                    $currentItemPath = $($_.Paths.Path)
                    Write-Verbose "Processing '$($_.Name)' composite item [$($_.ID)]"
                    if ($pscmdlet.ShouldProcess($currentItemPath, "Setting unique IDs for renderings")) {
                        Set-UniqueId $_ 
                    }
                }            
                $result.Result = "Success"
            }
            catch {
                $result.Result = "Error"
                $result.Message = $Error[0]
                $result.ErrorObject = $Error[0]
            }
            finally {
                $result
            }
        }
    }
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 1408
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20170203T091206Z
    - ID: "6ed03045-4adb-40e9-9b88-19282b6e5c90"
      Hint: Title
      Value: Set Unique IDs for composites renderings
    - ID: "82563bd5-de9b-4741-b79a-9bc9163e2086"
      Hint: Description
      Value: Ensures that every composite item has renderings with unique IDs
